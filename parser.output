Nonterminals useless in grammar

   ParameterSeq
   Arguments


Terminals unused in grammar

   T_NEWLN
   T_EOF
   T_FOR


Rules useless in grammar

   84 ParameterSeq: T_COMMA T_ID T_COLON Type ParameterSeq
   85             | T_COMMA T_ID T_COLON Type
   86             | %empty

   87 Arguments: Arguments T_COMMA Exp
   88          | Exp


State 5 conflicts: 1 shift/reduce
State 21 conflicts: 1 shift/reduce
State 45 conflicts: 1 shift/reduce
State 49 conflicts: 5 shift/reduce, 7 reduce/reduce
State 50 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 58 conflicts: 6 shift/reduce, 1 reduce/reduce
State 69 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 73 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 87 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 103 conflicts: 1 shift/reduce
State 104 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 108 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce
State 110 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce
State 115 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce
State 123 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 156 conflicts: 1 shift/reduce
State 164 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 173 conflicts: 1 shift/reduce
State 176 conflicts: 1 shift/reduce


Grammar

    0 $accept: Start $end

    1 Start: Classes

    2 Classes: Classes ClassName
    3        | ClassName

    4 ClassName: T_ID T_OPEN_BRACKET T_CLOSE_BRACKET
    5          | T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET
    6          | T_ID T_EXTENDS T_ID T_OPEN_BRACKET T_CLOSE_BRACKET
    7          | T_ID T_EXTENDS T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET

    8 InnerScopeClass: ClassMembers ClassMethods

    9 ClassMembers: ClassMembers ClassMember
   10             | %empty

   11 ClassMember: Type T_ID T_SEMICOLON

   12 ClassMethods: MethodName ClassMethods
   13             | %empty

   14 Parameters: Parameters T_COMMA Parameter
   15           | Parameter

   16 Parameter: T_ID T_COLON Type

   17 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   18           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET
   19           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   20           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

   21 InnerScopeMethod: Declarations Statements ReturnStatement

   22 Declarations: Declarations Declaration
   23             | %empty

   24 Declaration: Type IdentifierList T_SEMICOLON

   25 IdentifierList: IdentifierList T_COMMA T_ID
   26               | T_ID

   27 Statements: Statements Statement
   28           | Statement
   29           | %empty

   30 Statement: Assignment
   31          | MethodCall
   32          | IfElse
   33          | While
   34          | RepeatUntil
   35          | Print

   36 ReturnStatement: T_RETURN Exp T_SEMICOLON
   37                | %empty

   38 Assignment: T_ID T_ASSIGN Exp T_SEMICOLON
   39           | T_ID T_DOT T_ID T_ASSIGN Exp T_SEMICOLON

   40 Exp: Arithmetic
   41    | Exp T_LSS Exp
   42    | Exp T_LEQ Exp
   43    | Exp T_EQUIVALENCE Exp
   44    | Exp T_AND Exp
   45    | Exp T_OR Exp
   46    | T_NOT Exp
   47    | T_MINUS Exp
   48    | T_ID
   49    | T_ID T_DOT T_ID
   50    | MethodCall
   51    | T_OPENPAREN Exp T_CLOSEPAREN
   52    | T_NUMBER
   53    | T_TRUE
   54    | T_FALSE
   55    | T_NEW T_ID
   56    | T_NEW T_ID T_OPENPAREN ArgumentList T_CLOSEPAREN

   57 ArgumentList: ArgumentList T_COMMA Exp
   58             | Exp

   59 Arithmetic: Exp T_PLUS Exp
   60           | Exp T_MINUS Exp
   61           | Exp T_MULTIPLY Exp
   62           | Exp T_DIVIDE Exp

   63 MethodCall: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   64           | T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   65           | T_ID T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   66           | T_ID T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   67           | %empty

   68 IfElse: T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET
   69       | T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET
   70       | T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET
   71       | T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET T_CLOSE_BRACKET

   72 While: T_WHILE Exp T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   73      | T_WHILE Exp T_OPEN_BRACKET T_CLOSE_BRACKET

   74 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON
   75            | T_REPEAT T_OPEN_BRACKET T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON

   76 Print: T_PRINT Exp T_SEMICOLON

   77 Block: Block Statement Exp T_SEMICOLON
   78      | Statement Exp T_SEMICOLON

   79 Type: T_INTEGER
   80     | T_BOOL
   81     | T_ID

   82 ReturnType: Type
   83           | T_NONE


Terminals, with rules where they appear

$end (0) 0
error (256)
T_PLUS (258) 59
T_MINUS (259) 47 60
T_MULTIPLY (260) 61
T_DIVIDE (261) 62
T_LSS (262) 41
T_LEQ (263) 42
T_EQUIVALENCE (264) 43
T_AND (265) 44
T_OR (266) 45
T_NOT (267) 46
T_ASSIGN (268) 38 39
T_ID (269) 4 5 6 7 11 16 17 18 19 20 25 26 38 39 48 49 55 56 63 64
    65 66 81
T_OPENPAREN (270) 17 18 19 20 51 56 63 64 65 66 74 75
T_CLOSEPAREN (271) 17 18 19 20 51 56 63 64 65 66
T_OPEN_BRACKET (272) 4 5 6 7 17 18 19 20 68 69 70 71 72 73 74 75
T_CLOSE_BRACKET (273) 4 5 6 7 17 18 19 20 68 69 70 71 72 73 74 75
T_INTEGER (274) 79
T_NUMBER (275) 52
T_TRUE (276) 53
T_FALSE (277) 54
T_SEMICOLON (278) 11 24 36 38 39 63 64 65 66 74 75 76 77 78
T_NEWLN (279)
T_EOF (280)
T_NONE (281) 83
T_PRINT (282) 76
T_RETURN (283) 36
T_IF (284) 68 69 70 71
T_ELSE (285) 70 71
T_WHILE (286) 72 73
T_NEW (287) 55 56
T_BOOL (288) 80
T_EXTENDS (289) 6 7
T_REPEAT (290) 74 75
T_UNTIL (291) 74 75
T_FOR (292)
T_DOT (293) 39 49 65 66
T_COMMA (294) 14 25 57
T_UNARY (295)
T_LAMBDA (296) 17 18 19 20
T_COLON (297) 16


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
Start (44)
    on left: 1, on right: 0
Classes (45)
    on left: 2 3, on right: 1 2
ClassName (46)
    on left: 4 5 6 7, on right: 2 3
InnerScopeClass (47)
    on left: 8, on right: 5 7
ClassMembers (48)
    on left: 9 10, on right: 8 9
ClassMember (49)
    on left: 11, on right: 9
ClassMethods (50)
    on left: 12 13, on right: 8 12
Parameters (51)
    on left: 14 15, on right: 14 17 18 63 65
Parameter (52)
    on left: 16, on right: 14 15
MethodName (53)
    on left: 17 18 19 20, on right: 12
InnerScopeMethod (54)
    on left: 21, on right: 17 19 72
Declarations (55)
    on left: 22 23, on right: 21 22
Declaration (56)
    on left: 24, on right: 22
IdentifierList (57)
    on left: 25 26, on right: 24 25
Statements (58)
    on left: 27 28 29, on right: 21 27
Statement (59)
    on left: 30 31 32 33 34 35, on right: 27 28 77 78
ReturnStatement (60)
    on left: 36 37, on right: 21
Assignment (61)
    on left: 38 39, on right: 30
Exp (62)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56, on right:
    36 38 39 41 42 43 44 45 46 47 51 57 58 59 60 61 62 68 69 70 71
    72 73 74 75 76 77 78
ArgumentList (63)
    on left: 57 58, on right: 56 57
Arithmetic (64)
    on left: 59 60 61 62, on right: 40
MethodCall (65)
    on left: 63 64 65 66 67, on right: 31 50
IfElse (66)
    on left: 68 69 70 71, on right: 32
While (67)
    on left: 72 73, on right: 33
RepeatUntil (68)
    on left: 74 75, on right: 34
Print (69)
    on left: 76, on right: 35
Block (70)
    on left: 77 78, on right: 68 70 74 77
Type (71)
    on left: 79 80 81, on right: 11 16 24 82
ReturnType (72)
    on left: 82 83, on right: 17 18 19 20


State 0

    0 $accept: . Start $end

    T_ID  shift, and go to state 1

    Start      go to state 2
    Classes    go to state 3
    ClassName  go to state 4


State 1

    4 ClassName: T_ID . T_OPEN_BRACKET T_CLOSE_BRACKET
    5          | T_ID . T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET
    6          | T_ID . T_EXTENDS T_ID T_OPEN_BRACKET T_CLOSE_BRACKET
    7          | T_ID . T_EXTENDS T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 5
    T_EXTENDS       shift, and go to state 6


State 2

    0 $accept: Start . $end

    $end  shift, and go to state 7


State 3

    1 Start: Classes .
    2 Classes: Classes . ClassName

    T_ID  shift, and go to state 1

    $default  reduce using rule 1 (Start)

    ClassName  go to state 8


State 4

    3 Classes: ClassName .

    $default  reduce using rule 3 (Classes)


State 5

    4 ClassName: T_ID T_OPEN_BRACKET . T_CLOSE_BRACKET
    5          | T_ID T_OPEN_BRACKET . InnerScopeClass T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 9

    T_CLOSE_BRACKET  [reduce using rule 10 (ClassMembers)]
    $default         reduce using rule 10 (ClassMembers)

    InnerScopeClass  go to state 10
    ClassMembers     go to state 11


State 6

    6 ClassName: T_ID T_EXTENDS . T_ID T_OPEN_BRACKET T_CLOSE_BRACKET
    7          | T_ID T_EXTENDS . T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET

    T_ID  shift, and go to state 12


State 7

    0 $accept: Start $end .

    $default  accept


State 8

    2 Classes: Classes ClassName .

    $default  reduce using rule 2 (Classes)


State 9

    4 ClassName: T_ID T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 4 (ClassName)


State 10

    5 ClassName: T_ID T_OPEN_BRACKET InnerScopeClass . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 13


State 11

    8 InnerScopeClass: ClassMembers . ClassMethods
    9 ClassMembers: ClassMembers . ClassMember

    T_ID       shift, and go to state 14
    T_INTEGER  shift, and go to state 15
    T_BOOL     shift, and go to state 16

    $default  reduce using rule 13 (ClassMethods)

    ClassMember   go to state 17
    ClassMethods  go to state 18
    MethodName    go to state 19
    Type          go to state 20


State 12

    6 ClassName: T_ID T_EXTENDS T_ID . T_OPEN_BRACKET T_CLOSE_BRACKET
    7          | T_ID T_EXTENDS T_ID . T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 21


State 13

    5 ClassName: T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET .

    $default  reduce using rule 5 (ClassName)


State 14

   17 MethodName: T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   18           | T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET
   19           | T_ID . T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   20           | T_ID . T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET
   81 Type: T_ID .

    T_OPENPAREN  shift, and go to state 22

    $default  reduce using rule 81 (Type)


State 15

   79 Type: T_INTEGER .

    $default  reduce using rule 79 (Type)


State 16

   80 Type: T_BOOL .

    $default  reduce using rule 80 (Type)


State 17

    9 ClassMembers: ClassMembers ClassMember .

    $default  reduce using rule 9 (ClassMembers)


State 18

    8 InnerScopeClass: ClassMembers ClassMethods .

    $default  reduce using rule 8 (InnerScopeClass)


State 19

   12 ClassMethods: MethodName . ClassMethods

    T_ID  shift, and go to state 23

    $default  reduce using rule 13 (ClassMethods)

    ClassMethods  go to state 24
    MethodName    go to state 19


State 20

   11 ClassMember: Type . T_ID T_SEMICOLON

    T_ID  shift, and go to state 25


State 21

    6 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET . T_CLOSE_BRACKET
    7          | T_ID T_EXTENDS T_ID T_OPEN_BRACKET . InnerScopeClass T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 26

    T_CLOSE_BRACKET  [reduce using rule 10 (ClassMembers)]
    $default         reduce using rule 10 (ClassMembers)

    InnerScopeClass  go to state 27
    ClassMembers     go to state 11


State 22

   17 MethodName: T_ID T_OPENPAREN . Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   18           | T_ID T_OPENPAREN . Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET
   19           | T_ID T_OPENPAREN . T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   20           | T_ID T_OPENPAREN . T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_ID          shift, and go to state 28
    T_CLOSEPAREN  shift, and go to state 29

    Parameters  go to state 30
    Parameter   go to state 31


State 23

   17 MethodName: T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   18           | T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET
   19           | T_ID . T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   20           | T_ID . T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_OPENPAREN  shift, and go to state 22


State 24

   12 ClassMethods: MethodName ClassMethods .

    $default  reduce using rule 12 (ClassMethods)


State 25

   11 ClassMember: Type T_ID . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 32


State 26

    6 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 6 (ClassName)


State 27

    7 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET InnerScopeClass . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 33


State 28

   16 Parameter: T_ID . T_COLON Type

    T_COLON  shift, and go to state 34


State 29

   19 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN . T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   20           | T_ID T_OPENPAREN T_CLOSEPAREN . T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_LAMBDA  shift, and go to state 35


State 30

   14 Parameters: Parameters . T_COMMA Parameter
   17 MethodName: T_ID T_OPENPAREN Parameters . T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   18           | T_ID T_OPENPAREN Parameters . T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_CLOSEPAREN  shift, and go to state 36
    T_COMMA       shift, and go to state 37


State 31

   15 Parameters: Parameter .

    $default  reduce using rule 15 (Parameters)


State 32

   11 ClassMember: Type T_ID T_SEMICOLON .

    $default  reduce using rule 11 (ClassMember)


State 33

    7 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET .

    $default  reduce using rule 7 (ClassName)


State 34

   16 Parameter: T_ID T_COLON . Type

    T_ID       shift, and go to state 38
    T_INTEGER  shift, and go to state 15
    T_BOOL     shift, and go to state 16

    Type  go to state 39


State 35

   19 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA . ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   20           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA . ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_ID       shift, and go to state 38
    T_INTEGER  shift, and go to state 15
    T_NONE     shift, and go to state 40
    T_BOOL     shift, and go to state 16

    Type        go to state 41
    ReturnType  go to state 42


State 36

   17 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN . T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   18           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN . T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_LAMBDA  shift, and go to state 43


State 37

   14 Parameters: Parameters T_COMMA . Parameter

    T_ID  shift, and go to state 28

    Parameter  go to state 44


State 38

   81 Type: T_ID .

    $default  reduce using rule 81 (Type)


State 39

   16 Parameter: T_ID T_COLON Type .

    $default  reduce using rule 16 (Parameter)


State 40

   83 ReturnType: T_NONE .

    $default  reduce using rule 83 (ReturnType)


State 41

   82 ReturnType: Type .

    $default  reduce using rule 82 (ReturnType)


State 42

   19 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType . T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   20           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType . T_OPEN_BRACKET T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 45


State 43

   17 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA . ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   18           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA . ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_ID       shift, and go to state 38
    T_INTEGER  shift, and go to state 15
    T_NONE     shift, and go to state 40
    T_BOOL     shift, and go to state 16

    Type        go to state 41
    ReturnType  go to state 46


State 44

   14 Parameters: Parameters T_COMMA Parameter .

    $default  reduce using rule 14 (Parameters)


State 45

   19 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET . InnerScopeMethod T_CLOSE_BRACKET
   20           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 47

    T_CLOSE_BRACKET  [reduce using rule 23 (Declarations)]
    $default         reduce using rule 23 (Declarations)

    InnerScopeMethod  go to state 48
    Declarations      go to state 49


State 46

   17 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType . T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   18           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType . T_OPEN_BRACKET T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 50


State 47

   20 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 20 (MethodName)


State 48

   19 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 51


State 49

   21 InnerScopeMethod: Declarations . Statements ReturnStatement
   22 Declarations: Declarations . Declaration

    T_ID       shift, and go to state 52
    T_INTEGER  shift, and go to state 15
    T_PRINT    shift, and go to state 53
    T_IF       shift, and go to state 54
    T_WHILE    shift, and go to state 55
    T_BOOL     shift, and go to state 16
    T_REPEAT   shift, and go to state 56

    T_ID             [reduce using rule 29 (Statements)]
    T_ID             [reduce using rule 67 (MethodCall)]
    T_CLOSE_BRACKET  reduce using rule 29 (Statements)
    T_CLOSE_BRACKET  [reduce using rule 67 (MethodCall)]
    T_PRINT          [reduce using rule 29 (Statements)]
    T_PRINT          [reduce using rule 67 (MethodCall)]
    T_RETURN         reduce using rule 29 (Statements)
    T_RETURN         [reduce using rule 67 (MethodCall)]
    T_IF             [reduce using rule 29 (Statements)]
    T_IF             [reduce using rule 67 (MethodCall)]
    T_WHILE          [reduce using rule 29 (Statements)]
    T_WHILE          [reduce using rule 67 (MethodCall)]
    T_REPEAT         [reduce using rule 29 (Statements)]
    T_REPEAT         [reduce using rule 67 (MethodCall)]
    $default         reduce using rule 29 (Statements)

    Declaration  go to state 57
    Statements   go to state 58
    Statement    go to state 59
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Type         go to state 66


State 50

   17 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET . InnerScopeMethod T_CLOSE_BRACKET
   18           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 67

    T_CLOSE_BRACKET  [reduce using rule 23 (Declarations)]
    $default         reduce using rule 23 (Declarations)

    InnerScopeMethod  go to state 68
    Declarations      go to state 49


State 51

   19 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET .

    $default  reduce using rule 19 (MethodName)


State 52

   38 Assignment: T_ID . T_ASSIGN Exp T_SEMICOLON
   39           | T_ID . T_DOT T_ID T_ASSIGN Exp T_SEMICOLON
   63 MethodCall: T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   64           | T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   65           | T_ID . T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   66           | T_ID . T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   81 Type: T_ID .

    T_ASSIGN     shift, and go to state 69
    T_OPENPAREN  shift, and go to state 70
    T_DOT        shift, and go to state 71

    $default  reduce using rule 81 (Type)


State 53

   76 Print: T_PRINT . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 80
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 54

   68 IfElse: T_IF . Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET
   69       | T_IF . Exp T_OPEN_BRACKET T_CLOSE_BRACKET
   70       | T_IF . Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET
   71       | T_IF . Exp T_OPEN_BRACKET T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET T_CLOSE_BRACKET

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 83
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 55

   72 While: T_WHILE . Exp T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   73      | T_WHILE . Exp T_OPEN_BRACKET T_CLOSE_BRACKET

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 84
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 56

   74 RepeatUntil: T_REPEAT . T_OPEN_BRACKET Block T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON
   75            | T_REPEAT . T_OPEN_BRACKET T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON

    T_OPEN_BRACKET  shift, and go to state 85


State 57

   22 Declarations: Declarations Declaration .

    $default  reduce using rule 22 (Declarations)


State 58

   21 InnerScopeMethod: Declarations Statements . ReturnStatement
   27 Statements: Statements . Statement

    T_ID      shift, and go to state 86
    T_PRINT   shift, and go to state 53
    T_RETURN  shift, and go to state 87
    T_IF      shift, and go to state 54
    T_WHILE   shift, and go to state 55
    T_REPEAT  shift, and go to state 56

    T_ID             [reduce using rule 67 (MethodCall)]
    T_CLOSE_BRACKET  reduce using rule 37 (ReturnStatement)
    T_CLOSE_BRACKET  [reduce using rule 67 (MethodCall)]
    T_PRINT          [reduce using rule 67 (MethodCall)]
    T_RETURN         [reduce using rule 67 (MethodCall)]
    T_IF             [reduce using rule 67 (MethodCall)]
    T_WHILE          [reduce using rule 67 (MethodCall)]
    T_REPEAT         [reduce using rule 67 (MethodCall)]
    $default         reduce using rule 37 (ReturnStatement)

    Statement        go to state 88
    ReturnStatement  go to state 89
    Assignment       go to state 60
    MethodCall       go to state 61
    IfElse           go to state 62
    While            go to state 63
    RepeatUntil      go to state 64
    Print            go to state 65


State 59

   28 Statements: Statement .

    $default  reduce using rule 28 (Statements)


State 60

   30 Statement: Assignment .

    $default  reduce using rule 30 (Statement)


State 61

   31 Statement: MethodCall .

    $default  reduce using rule 31 (Statement)


State 62

   32 Statement: IfElse .

    $default  reduce using rule 32 (Statement)


State 63

   33 Statement: While .

    $default  reduce using rule 33 (Statement)


State 64

   34 Statement: RepeatUntil .

    $default  reduce using rule 34 (Statement)


State 65

   35 Statement: Print .

    $default  reduce using rule 35 (Statement)


State 66

   24 Declaration: Type . IdentifierList T_SEMICOLON

    T_ID  shift, and go to state 90

    IdentifierList  go to state 91


State 67

   18 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 18 (MethodName)


State 68

   17 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 92


State 69

   38 Assignment: T_ID T_ASSIGN . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 93
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 70

   63 MethodCall: T_ID T_OPENPAREN . Parameters T_CLOSEPAREN T_SEMICOLON
   64           | T_ID T_OPENPAREN . T_CLOSEPAREN T_SEMICOLON

    T_ID          shift, and go to state 28
    T_CLOSEPAREN  shift, and go to state 94

    Parameters  go to state 95
    Parameter   go to state 31


State 71

   39 Assignment: T_ID T_DOT . T_ID T_ASSIGN Exp T_SEMICOLON
   65 MethodCall: T_ID T_DOT . T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   66           | T_ID T_DOT . T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_ID  shift, and go to state 96


State 72

   47 Exp: T_MINUS . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 97
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 73

   46 Exp: T_NOT . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 98
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 74

   48 Exp: T_ID .
   49    | T_ID . T_DOT T_ID
   63 MethodCall: T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   64           | T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   65           | T_ID . T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   66           | T_ID . T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_OPENPAREN  shift, and go to state 70
    T_DOT        shift, and go to state 99

    $default  reduce using rule 48 (Exp)


State 75

   51 Exp: T_OPENPAREN . Exp T_CLOSEPAREN

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 100
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 76

   52 Exp: T_NUMBER .

    $default  reduce using rule 52 (Exp)


State 77

   53 Exp: T_TRUE .

    $default  reduce using rule 53 (Exp)


State 78

   54 Exp: T_FALSE .

    $default  reduce using rule 54 (Exp)


State 79

   55 Exp: T_NEW . T_ID
   56    | T_NEW . T_ID T_OPENPAREN ArgumentList T_CLOSEPAREN

    T_ID  shift, and go to state 101


State 80

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp
   76 Print: T_PRINT Exp . T_SEMICOLON

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_SEMICOLON    shift, and go to state 111


State 81

   40 Exp: Arithmetic .

    $default  reduce using rule 40 (Exp)


State 82

   50 Exp: MethodCall .

    $default  reduce using rule 50 (Exp)


State 83

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp
   68 IfElse: T_IF Exp . T_OPEN_BRACKET Block T_CLOSE_BRACKET
   69       | T_IF Exp . T_OPEN_BRACKET T_CLOSE_BRACKET
   70       | T_IF Exp . T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET
   71       | T_IF Exp . T_OPEN_BRACKET T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET T_CLOSE_BRACKET

    T_PLUS          shift, and go to state 102
    T_MINUS         shift, and go to state 103
    T_MULTIPLY      shift, and go to state 104
    T_DIVIDE        shift, and go to state 105
    T_LSS           shift, and go to state 106
    T_LEQ           shift, and go to state 107
    T_EQUIVALENCE   shift, and go to state 108
    T_AND           shift, and go to state 109
    T_OR            shift, and go to state 110
    T_OPEN_BRACKET  shift, and go to state 112


State 84

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp
   72 While: T_WHILE Exp . T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   73      | T_WHILE Exp . T_OPEN_BRACKET T_CLOSE_BRACKET

    T_PLUS          shift, and go to state 102
    T_MINUS         shift, and go to state 103
    T_MULTIPLY      shift, and go to state 104
    T_DIVIDE        shift, and go to state 105
    T_LSS           shift, and go to state 106
    T_LEQ           shift, and go to state 107
    T_EQUIVALENCE   shift, and go to state 108
    T_AND           shift, and go to state 109
    T_OR            shift, and go to state 110
    T_OPEN_BRACKET  shift, and go to state 113


State 85

   74 RepeatUntil: T_REPEAT T_OPEN_BRACKET . Block T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON
   75            | T_REPEAT T_OPEN_BRACKET . T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON

    T_ID             shift, and go to state 86
    T_CLOSE_BRACKET  shift, and go to state 114
    T_PRINT          shift, and go to state 53
    T_IF             shift, and go to state 54
    T_WHILE          shift, and go to state 55
    T_REPEAT         shift, and go to state 56

    T_ID      [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Statement    go to state 115
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Block        go to state 116


State 86

   38 Assignment: T_ID . T_ASSIGN Exp T_SEMICOLON
   39           | T_ID . T_DOT T_ID T_ASSIGN Exp T_SEMICOLON
   63 MethodCall: T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   64           | T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   65           | T_ID . T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   66           | T_ID . T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_ASSIGN     shift, and go to state 69
    T_OPENPAREN  shift, and go to state 70
    T_DOT        shift, and go to state 71


State 87

   36 ReturnStatement: T_RETURN . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 117
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 88

   27 Statements: Statements Statement .

    $default  reduce using rule 27 (Statements)


State 89

   21 InnerScopeMethod: Declarations Statements ReturnStatement .

    $default  reduce using rule 21 (InnerScopeMethod)


State 90

   26 IdentifierList: T_ID .

    $default  reduce using rule 26 (IdentifierList)


State 91

   24 Declaration: Type IdentifierList . T_SEMICOLON
   25 IdentifierList: IdentifierList . T_COMMA T_ID

    T_SEMICOLON  shift, and go to state 118
    T_COMMA      shift, and go to state 119


State 92

   17 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET .

    $default  reduce using rule 17 (MethodName)


State 93

   38 Assignment: T_ID T_ASSIGN Exp . T_SEMICOLON
   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_SEMICOLON    shift, and go to state 120


State 94

   64 MethodCall: T_ID T_OPENPAREN T_CLOSEPAREN . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 121


State 95

   14 Parameters: Parameters . T_COMMA Parameter
   63 MethodCall: T_ID T_OPENPAREN Parameters . T_CLOSEPAREN T_SEMICOLON

    T_CLOSEPAREN  shift, and go to state 122
    T_COMMA       shift, and go to state 37


State 96

   39 Assignment: T_ID T_DOT T_ID . T_ASSIGN Exp T_SEMICOLON
   65 MethodCall: T_ID T_DOT T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   66           | T_ID T_DOT T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_ASSIGN     shift, and go to state 123
    T_OPENPAREN  shift, and go to state 124


State 97

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   47    | T_MINUS Exp .
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    $default  reduce using rule 47 (Exp)


State 98

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   46    | T_NOT Exp .
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    $default  reduce using rule 46 (Exp)


State 99

   49 Exp: T_ID T_DOT . T_ID
   65 MethodCall: T_ID T_DOT . T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   66           | T_ID T_DOT . T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_ID  shift, and go to state 125


State 100

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   51    | T_OPENPAREN Exp . T_CLOSEPAREN
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_CLOSEPAREN   shift, and go to state 126


State 101

   55 Exp: T_NEW T_ID .
   56    | T_NEW T_ID . T_OPENPAREN ArgumentList T_CLOSEPAREN

    T_OPENPAREN  shift, and go to state 127

    $default  reduce using rule 55 (Exp)


State 102

   59 Arithmetic: Exp T_PLUS . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 128
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 103

   60 Arithmetic: Exp T_MINUS . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 129
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 104

   61 Arithmetic: Exp T_MULTIPLY . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 130
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 105

   62 Arithmetic: Exp T_DIVIDE . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 131
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 106

   41 Exp: Exp T_LSS . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 132
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 107

   42 Exp: Exp T_LEQ . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 133
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 108

   43 Exp: Exp T_EQUIVALENCE . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 134
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 109

   44 Exp: Exp T_AND . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 135
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 110

   45 Exp: Exp T_OR . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 136
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 111

   76 Print: T_PRINT Exp T_SEMICOLON .

    $default  reduce using rule 76 (Print)


State 112

   68 IfElse: T_IF Exp T_OPEN_BRACKET . Block T_CLOSE_BRACKET
   69       | T_IF Exp T_OPEN_BRACKET . T_CLOSE_BRACKET
   70       | T_IF Exp T_OPEN_BRACKET . Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET
   71       | T_IF Exp T_OPEN_BRACKET . T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET T_CLOSE_BRACKET

    T_ID             shift, and go to state 86
    T_CLOSE_BRACKET  shift, and go to state 137
    T_PRINT          shift, and go to state 53
    T_IF             shift, and go to state 54
    T_WHILE          shift, and go to state 55
    T_REPEAT         shift, and go to state 56

    T_ID      [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Statement    go to state 115
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Block        go to state 138


State 113

   72 While: T_WHILE Exp T_OPEN_BRACKET . InnerScopeMethod T_CLOSE_BRACKET
   73      | T_WHILE Exp T_OPEN_BRACKET . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 139

    T_CLOSE_BRACKET  [reduce using rule 23 (Declarations)]
    $default         reduce using rule 23 (Declarations)

    InnerScopeMethod  go to state 140
    Declarations      go to state 49


State 114

   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET T_CLOSE_BRACKET . T_UNTIL T_OPENPAREN Exp T_SEMICOLON

    T_UNTIL  shift, and go to state 141


State 115

   78 Block: Statement . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 142
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 116

   74 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block . T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON
   77 Block: Block . Statement Exp T_SEMICOLON

    T_ID             shift, and go to state 86
    T_CLOSE_BRACKET  shift, and go to state 143
    T_PRINT          shift, and go to state 53
    T_IF             shift, and go to state 54
    T_WHILE          shift, and go to state 55
    T_REPEAT         shift, and go to state 56

    T_ID      [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Statement    go to state 144
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65


State 117

   36 ReturnStatement: T_RETURN Exp . T_SEMICOLON
   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_SEMICOLON    shift, and go to state 145


State 118

   24 Declaration: Type IdentifierList T_SEMICOLON .

    $default  reduce using rule 24 (Declaration)


State 119

   25 IdentifierList: IdentifierList T_COMMA . T_ID

    T_ID  shift, and go to state 146


State 120

   38 Assignment: T_ID T_ASSIGN Exp T_SEMICOLON .

    $default  reduce using rule 38 (Assignment)


State 121

   64 MethodCall: T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON .

    $default  reduce using rule 64 (MethodCall)


State 122

   63 MethodCall: T_ID T_OPENPAREN Parameters T_CLOSEPAREN . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 147


State 123

   39 Assignment: T_ID T_DOT T_ID T_ASSIGN . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 148
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 124

   65 MethodCall: T_ID T_DOT T_ID T_OPENPAREN . Parameters T_CLOSEPAREN T_SEMICOLON
   66           | T_ID T_DOT T_ID T_OPENPAREN . T_CLOSEPAREN T_SEMICOLON

    T_ID          shift, and go to state 28
    T_CLOSEPAREN  shift, and go to state 149

    Parameters  go to state 150
    Parameter   go to state 31


State 125

   49 Exp: T_ID T_DOT T_ID .
   65 MethodCall: T_ID T_DOT T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   66           | T_ID T_DOT T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_OPENPAREN  shift, and go to state 124

    $default  reduce using rule 49 (Exp)


State 126

   51 Exp: T_OPENPAREN Exp T_CLOSEPAREN .

    $default  reduce using rule 51 (Exp)


State 127

   56 Exp: T_NEW T_ID T_OPENPAREN . ArgumentList T_CLOSEPAREN

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp           go to state 151
    ArgumentList  go to state 152
    Arithmetic    go to state 81
    MethodCall    go to state 82


State 128

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   59           | Exp T_PLUS Exp .
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    T_MULTIPLY  shift, and go to state 104
    T_DIVIDE    shift, and go to state 105

    $default  reduce using rule 59 (Arithmetic)


State 129

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   60           | Exp T_MINUS Exp .
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    T_MULTIPLY  shift, and go to state 104
    T_DIVIDE    shift, and go to state 105

    $default  reduce using rule 60 (Arithmetic)


State 130

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   61           | Exp T_MULTIPLY Exp .
   62           | Exp . T_DIVIDE Exp

    $default  reduce using rule 61 (Arithmetic)


State 131

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp
   62           | Exp T_DIVIDE Exp .

    $default  reduce using rule 62 (Arithmetic)


State 132

   41 Exp: Exp . T_LSS Exp
   41    | Exp T_LSS Exp .
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    T_PLUS      shift, and go to state 102
    T_MINUS     shift, and go to state 103
    T_MULTIPLY  shift, and go to state 104
    T_DIVIDE    shift, and go to state 105

    $default  reduce using rule 41 (Exp)


State 133

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   42    | Exp T_LEQ Exp .
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    T_PLUS      shift, and go to state 102
    T_MINUS     shift, and go to state 103
    T_MULTIPLY  shift, and go to state 104
    T_DIVIDE    shift, and go to state 105

    $default  reduce using rule 42 (Exp)


State 134

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   43    | Exp T_EQUIVALENCE Exp .
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    T_PLUS      shift, and go to state 102
    T_MINUS     shift, and go to state 103
    T_MULTIPLY  shift, and go to state 104
    T_DIVIDE    shift, and go to state 105

    $default  reduce using rule 43 (Exp)


State 135

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   44    | Exp T_AND Exp .
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108

    $default  reduce using rule 44 (Exp)


State 136

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   45    | Exp T_OR Exp .
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109

    $default  reduce using rule 45 (Exp)


State 137

   69 IfElse: T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET .
   71       | T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET . T_ELSE T_OPEN_BRACKET T_CLOSE_BRACKET

    T_ELSE  shift, and go to state 153

    $default  reduce using rule 69 (IfElse)


State 138

   68 IfElse: T_IF Exp T_OPEN_BRACKET Block . T_CLOSE_BRACKET
   70       | T_IF Exp T_OPEN_BRACKET Block . T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET
   77 Block: Block . Statement Exp T_SEMICOLON

    T_ID             shift, and go to state 86
    T_CLOSE_BRACKET  shift, and go to state 154
    T_PRINT          shift, and go to state 53
    T_IF             shift, and go to state 54
    T_WHILE          shift, and go to state 55
    T_REPEAT         shift, and go to state 56

    T_ID      [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Statement    go to state 144
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65


State 139

   73 While: T_WHILE Exp T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 73 (While)


State 140

   72 While: T_WHILE Exp T_OPEN_BRACKET InnerScopeMethod . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 155


State 141

   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET T_CLOSE_BRACKET T_UNTIL . T_OPENPAREN Exp T_SEMICOLON

    T_OPENPAREN  shift, and go to state 156


State 142

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp
   78 Block: Statement Exp . T_SEMICOLON

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_SEMICOLON    shift, and go to state 157


State 143

   74 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block T_CLOSE_BRACKET . T_UNTIL T_OPENPAREN Exp T_SEMICOLON

    T_UNTIL  shift, and go to state 158


State 144

   77 Block: Block Statement . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 159
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 145

   36 ReturnStatement: T_RETURN Exp T_SEMICOLON .

    $default  reduce using rule 36 (ReturnStatement)


State 146

   25 IdentifierList: IdentifierList T_COMMA T_ID .

    $default  reduce using rule 25 (IdentifierList)


State 147

   63 MethodCall: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON .

    $default  reduce using rule 63 (MethodCall)


State 148

   39 Assignment: T_ID T_DOT T_ID T_ASSIGN Exp . T_SEMICOLON
   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_SEMICOLON    shift, and go to state 160


State 149

   66 MethodCall: T_ID T_DOT T_ID T_OPENPAREN T_CLOSEPAREN . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 161


State 150

   14 Parameters: Parameters . T_COMMA Parameter
   65 MethodCall: T_ID T_DOT T_ID T_OPENPAREN Parameters . T_CLOSEPAREN T_SEMICOLON

    T_CLOSEPAREN  shift, and go to state 162
    T_COMMA       shift, and go to state 37


State 151

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   58 ArgumentList: Exp .
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110

    $default  reduce using rule 58 (ArgumentList)


State 152

   56 Exp: T_NEW T_ID T_OPENPAREN ArgumentList . T_CLOSEPAREN
   57 ArgumentList: ArgumentList . T_COMMA Exp

    T_CLOSEPAREN  shift, and go to state 163
    T_COMMA       shift, and go to state 164


State 153

   71 IfElse: T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET T_ELSE . T_OPEN_BRACKET T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 165


State 154

   68 IfElse: T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET .
   70       | T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET . T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET

    T_ELSE  shift, and go to state 166

    $default  reduce using rule 68 (IfElse)


State 155

   72 While: T_WHILE Exp T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET .

    $default  reduce using rule 72 (While)


State 156

   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET T_CLOSE_BRACKET T_UNTIL T_OPENPAREN . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 167
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 157

   78 Block: Statement Exp T_SEMICOLON .

    $default  reduce using rule 78 (Block)


State 158

   74 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block T_CLOSE_BRACKET T_UNTIL . T_OPENPAREN Exp T_SEMICOLON

    T_OPENPAREN  shift, and go to state 168


State 159

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp
   77 Block: Block Statement Exp . T_SEMICOLON

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_SEMICOLON    shift, and go to state 169


State 160

   39 Assignment: T_ID T_DOT T_ID T_ASSIGN Exp T_SEMICOLON .

    $default  reduce using rule 39 (Assignment)


State 161

   66 MethodCall: T_ID T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON .

    $default  reduce using rule 66 (MethodCall)


State 162

   65 MethodCall: T_ID T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 170


State 163

   56 Exp: T_NEW T_ID T_OPENPAREN ArgumentList T_CLOSEPAREN .

    $default  reduce using rule 56 (Exp)


State 164

   57 ArgumentList: ArgumentList T_COMMA . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 171
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 165

   71 IfElse: T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 172


State 166

   70 IfElse: T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE . T_OPEN_BRACKET Block T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 173


State 167

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp
   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp . T_SEMICOLON

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_SEMICOLON    shift, and go to state 174


State 168

   74 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block T_CLOSE_BRACKET T_UNTIL T_OPENPAREN . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    T_MINUS   [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Exp         go to state 175
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 169

   77 Block: Block Statement Exp T_SEMICOLON .

    $default  reduce using rule 77 (Block)


State 170

   65 MethodCall: T_ID T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON .

    $default  reduce using rule 65 (MethodCall)


State 171

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   57 ArgumentList: ArgumentList T_COMMA Exp .
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110

    $default  reduce using rule 57 (ArgumentList)


State 172

   71 IfElse: T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 71 (IfElse)


State 173

   70 IfElse: T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET . Block T_CLOSE_BRACKET

    T_ID      shift, and go to state 86
    T_PRINT   shift, and go to state 53
    T_IF      shift, and go to state 54
    T_WHILE   shift, and go to state 55
    T_REPEAT  shift, and go to state 56

    T_ID      [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Statement    go to state 115
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Block        go to state 176


State 174

   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON .

    $default  reduce using rule 75 (RepeatUntil)


State 175

   41 Exp: Exp . T_LSS Exp
   42    | Exp . T_LEQ Exp
   43    | Exp . T_EQUIVALENCE Exp
   44    | Exp . T_AND Exp
   45    | Exp . T_OR Exp
   59 Arithmetic: Exp . T_PLUS Exp
   60           | Exp . T_MINUS Exp
   61           | Exp . T_MULTIPLY Exp
   62           | Exp . T_DIVIDE Exp
   74 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp . T_SEMICOLON

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_SEMICOLON    shift, and go to state 177


State 176

   70 IfElse: T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block . T_CLOSE_BRACKET
   77 Block: Block . Statement Exp T_SEMICOLON

    T_ID             shift, and go to state 86
    T_CLOSE_BRACKET  shift, and go to state 178
    T_PRINT          shift, and go to state 53
    T_IF             shift, and go to state 54
    T_WHILE          shift, and go to state 55
    T_REPEAT         shift, and go to state 56

    T_ID      [reduce using rule 67 (MethodCall)]
    $default  reduce using rule 67 (MethodCall)

    Statement    go to state 144
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65


State 177

   74 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON .

    $default  reduce using rule 74 (RepeatUntil)


State 178

   70 IfElse: T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET .

    $default  reduce using rule 70 (IfElse)
