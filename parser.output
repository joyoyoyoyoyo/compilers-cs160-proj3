Nonterminals useless in grammar

   ParameterSeq


Terminals unused in grammar

   T_NEWLN
   T_EOF
   T_FOR


Rules useless in grammar

   82 ParameterSeq: T_COMMA T_ID T_COLON Type ParameterSeq
   83             | T_COMMA T_ID T_COLON Type
   84             | %empty


Rules useless in parser due to conflicts

   11 ClassMembers: %empty

   56 ReturnStatement: %empty


State 5 conflicts: 2 shift/reduce
State 21 conflicts: 1 reduce/reduce
State 23 conflicts: 2 shift/reduce
State 27 conflicts: 1 shift/reduce, 2 reduce/reduce
State 48 conflicts: 8 shift/reduce, 8 reduce/reduce
State 52 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 57 conflicts: 7 shift/reduce, 9 reduce/reduce
State 58 conflicts: 7 shift/reduce, 8 reduce/reduce
State 67 conflicts: 8 shift/reduce, 8 reduce/reduce
State 70 conflicts: 1 shift/reduce
State 71 conflicts: 1 shift/reduce
State 73 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce, 17 reduce/reduce
State 84 conflicts: 8 shift/reduce, 9 reduce/reduce
State 89 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 103 conflicts: 1 shift/reduce
State 104 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 108 conflicts: 1 shift/reduce
State 110 conflicts: 1 shift/reduce, 17 reduce/reduce
State 111 conflicts: 1 shift/reduce, 17 reduce/reduce
State 113 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce, 17 reduce/reduce
State 115 conflicts: 1 shift/reduce
State 124 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce, 17 reduce/reduce
State 140 conflicts: 1 shift/reduce, 17 reduce/reduce
State 144 conflicts: 1 shift/reduce
State 156 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 172 conflicts: 1 shift/reduce, 17 reduce/reduce
State 175 conflicts: 1 shift/reduce, 17 reduce/reduce


Grammar

    0 $accept: Start $end

    1 Start: Classes

    2 Classes: Classes ClassName
    3        | ClassName

    4 ClassName: T_ID T_OPEN_BRACKET T_CLOSE_BRACKET T_SEMICOLON
    5          | T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET T_SEMICOLON
    6          | T_ID T_EXTENDS T_ID T_OPEN_BRACKET T_CLOSE_BRACKET T_SEMICOLON
    7          | T_ID T_EXTENDS T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET T_SEMICOLON

    8 InnerScopeClass: ClassMembers ClassMethods

    9 ClassMembers: Type T_ID T_SEMICOLON ClassMembers
   10             | Type T_ID T_SEMICOLON
   11             | %empty

   12 ClassMethods: MethodName ClassMethods
   13             | MethodName
   14             | %empty

   15 Parameters: Parameters T_COMMA Parameter
   16           | Parameter

   17 Parameter: T_ID T_COLON Type

   18 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   19           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET
   20           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   21           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

   22 InnerScopeMethod: Declaration Statements ReturnStatement
   23                 | Declaration Statements
   24                 | Statements

   25 Declaration: Declaration Type T_ID T_SEMICOLON
   26            | Type T_ID T_SEMICOLON

   27 Statements: Statements Statement
   28           | Statement
   29           | %empty

   30 Statement: Assignment
   31          | MethodCall
   32          | IfElse
   33          | While
   34          | RepeatUntil
   35          | Print

   36 Assignment: Type T_ASSIGN Exp T_SEMICOLON
   37           | T_ID T_DOT T_ID T_ASSIGN Exp T_SEMICOLON
   38           | %empty

   39 MethodCall: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   40           | T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   41           | T_ID T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   42           | T_ID T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   43           | %empty

   44 IfElse: T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET
   45       | T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET
   46       | T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET
   47       | T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET T_CLOSE_BRACKET

   48 While: T_WHILE Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET
   49      | T_WHILE Exp T_OPEN_BRACKET T_CLOSE_BRACKET

   50 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON
   51            | T_REPEAT T_OPEN_BRACKET T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON

   52 Print: T_PRINT Exp T_SEMICOLON

   53 Block: Block Statement Exp T_SEMICOLON
   54      | Statement Exp T_SEMICOLON

   55 ReturnStatement: T_RETURN Exp T_SEMICOLON
   56                | %empty

   57 Type: T_INTEGER
   58     | T_BOOL
   59     | T_ID

   60 ReturnType: Type
   61           | T_NONE

   62 Exp: Exp T_PLUS Exp
   63    | Exp T_MINUS Exp
   64    | Exp T_MULTIPLY Exp
   65    | Exp T_DIVIDE Exp
   66    | Exp T_LSS Exp
   67    | Exp T_LEQ Exp
   68    | Exp T_EQUIVALENCE Exp
   69    | Exp T_AND Exp
   70    | Exp T_OR Exp
   71    | T_NOT Exp
   72    | T_MINUS Exp
   73    | T_ID
   74    | T_ID T_DOT T_ID
   75    | MethodCall
   76    | T_OPENPAREN Exp T_CLOSEPAREN
   77    | T_NUMBER
   78    | T_TRUE
   79    | T_FALSE
   80    | T_NEW T_ID
   81    | T_NEW T_ID T_OPENPAREN Parameters T_CLOSEPAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
T_PLUS (258) 62
T_MINUS (259) 63 72
T_MULTIPLY (260) 64
T_DIVIDE (261) 65
T_LSS (262) 66
T_LEQ (263) 67
T_EQUIVALENCE (264) 68
T_AND (265) 69
T_OR (266) 70
T_NOT (267) 71
T_ID (268) 4 5 6 7 9 10 17 18 19 20 21 25 26 37 39 40 41 42 59 73 74
    80 81
T_OPENPAREN (269) 18 19 20 21 39 40 41 42 50 51 76 81
T_CLOSEPAREN (270) 18 19 20 21 39 40 41 42 76 81
T_OPEN_BRACKET (271) 4 5 6 7 18 19 20 21 44 45 46 47 48 49 50 51
T_CLOSE_BRACKET (272) 4 5 6 7 18 19 20 21 44 45 46 47 48 49 50 51
T_INTEGER (273) 57
T_NUMBER (274) 77
T_TRUE (275) 78
T_FALSE (276) 79
T_SEMICOLON (277) 4 5 6 7 9 10 25 26 36 37 39 40 41 42 50 51 52 53
    54 55
T_NEWLN (278)
T_EOF (279)
T_ASSIGN (280) 36 37
T_NONE (281) 61
T_PRINT (282) 52
T_RETURN (283) 55
T_IF (284) 44 45 46 47
T_ELSE (285) 46 47
T_WHILE (286) 48 49
T_NEW (287) 80 81
T_BOOL (288) 58
T_EXTENDS (289) 6 7
T_REPEAT (290) 50 51
T_UNTIL (291) 50 51
T_FOR (292)
T_DOT (293) 37 41 42 74
T_COMMA (294) 15
T_UNARY (295)
T_LAMBDA (296) 18 19 20 21
T_COLON (297) 17


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
Start (44)
    on left: 1, on right: 0
Classes (45)
    on left: 2 3, on right: 1 2
ClassName (46)
    on left: 4 5 6 7, on right: 2 3
InnerScopeClass (47)
    on left: 8, on right: 5 7
ClassMembers (48)
    on left: 9 10 11, on right: 8 9
ClassMethods (49)
    on left: 12 13 14, on right: 8 12
Parameters (50)
    on left: 15 16, on right: 15 18 19 39 41 81
Parameter (51)
    on left: 17, on right: 15 16
MethodName (52)
    on left: 18 19 20 21, on right: 12 13
InnerScopeMethod (53)
    on left: 22 23 24, on right: 18 20
Declaration (54)
    on left: 25 26, on right: 22 23 25
Statements (55)
    on left: 27 28 29, on right: 22 23 24 27
Statement (56)
    on left: 30 31 32 33 34 35, on right: 27 28 53 54
Assignment (57)
    on left: 36 37 38, on right: 30
MethodCall (58)
    on left: 39 40 41 42 43, on right: 31 75
IfElse (59)
    on left: 44 45 46 47, on right: 32
While (60)
    on left: 48 49, on right: 33
RepeatUntil (61)
    on left: 50 51, on right: 34
Print (62)
    on left: 52, on right: 35
Block (63)
    on left: 53 54, on right: 44 46 48 50 53
ReturnStatement (64)
    on left: 55 56, on right: 22
Type (65)
    on left: 57 58 59, on right: 9 10 17 25 26 36 60
ReturnType (66)
    on left: 60 61, on right: 18 19 20 21
Exp (67)
    on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
    80 81, on right: 36 37 44 45 46 47 48 49 50 51 52 53 54 55 62 63
    64 65 66 67 68 69 70 71 72 76


State 0

    0 $accept: . Start $end

    T_ID  shift, and go to state 1

    Start      go to state 2
    Classes    go to state 3
    ClassName  go to state 4


State 1

    4 ClassName: T_ID . T_OPEN_BRACKET T_CLOSE_BRACKET T_SEMICOLON
    5          | T_ID . T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET T_SEMICOLON
    6          | T_ID . T_EXTENDS T_ID T_OPEN_BRACKET T_CLOSE_BRACKET T_SEMICOLON
    7          | T_ID . T_EXTENDS T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET T_SEMICOLON

    T_OPEN_BRACKET  shift, and go to state 5
    T_EXTENDS       shift, and go to state 6


State 2

    0 $accept: Start . $end

    $end  shift, and go to state 7


State 3

    1 Start: Classes .
    2 Classes: Classes . ClassName

    T_ID  shift, and go to state 1

    $default  reduce using rule 1 (Start)

    ClassName  go to state 8


State 4

    3 Classes: ClassName .

    $default  reduce using rule 3 (Classes)


State 5

    4 ClassName: T_ID T_OPEN_BRACKET . T_CLOSE_BRACKET T_SEMICOLON
    5          | T_ID T_OPEN_BRACKET . InnerScopeClass T_CLOSE_BRACKET T_SEMICOLON

    T_ID             shift, and go to state 9
    T_CLOSE_BRACKET  shift, and go to state 10
    T_INTEGER        shift, and go to state 11
    T_BOOL           shift, and go to state 12

    T_ID             [reduce using rule 11 (ClassMembers)]
    T_CLOSE_BRACKET  [reduce using rule 11 (ClassMembers)]

    InnerScopeClass  go to state 13
    ClassMembers     go to state 14
    Type             go to state 15


State 6

    6 ClassName: T_ID T_EXTENDS . T_ID T_OPEN_BRACKET T_CLOSE_BRACKET T_SEMICOLON
    7          | T_ID T_EXTENDS . T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET T_SEMICOLON

    T_ID  shift, and go to state 16


State 7

    0 $accept: Start $end .

    $default  accept


State 8

    2 Classes: Classes ClassName .

    $default  reduce using rule 2 (Classes)


State 9

   59 Type: T_ID .

    $default  reduce using rule 59 (Type)


State 10

    4 ClassName: T_ID T_OPEN_BRACKET T_CLOSE_BRACKET . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 17


State 11

   57 Type: T_INTEGER .

    $default  reduce using rule 57 (Type)


State 12

   58 Type: T_BOOL .

    $default  reduce using rule 58 (Type)


State 13

    5 ClassName: T_ID T_OPEN_BRACKET InnerScopeClass . T_CLOSE_BRACKET T_SEMICOLON

    T_CLOSE_BRACKET  shift, and go to state 18


State 14

    8 InnerScopeClass: ClassMembers . ClassMethods

    T_ID  shift, and go to state 19

    $default  reduce using rule 14 (ClassMethods)

    ClassMethods  go to state 20
    MethodName    go to state 21


State 15

    9 ClassMembers: Type . T_ID T_SEMICOLON ClassMembers
   10             | Type . T_ID T_SEMICOLON

    T_ID  shift, and go to state 22


State 16

    6 ClassName: T_ID T_EXTENDS T_ID . T_OPEN_BRACKET T_CLOSE_BRACKET T_SEMICOLON
    7          | T_ID T_EXTENDS T_ID . T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET T_SEMICOLON

    T_OPEN_BRACKET  shift, and go to state 23


State 17

    4 ClassName: T_ID T_OPEN_BRACKET T_CLOSE_BRACKET T_SEMICOLON .

    $default  reduce using rule 4 (ClassName)


State 18

    5 ClassName: T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 24


State 19

   18 MethodName: T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   19           | T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET
   20           | T_ID . T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   21           | T_ID . T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_OPENPAREN  shift, and go to state 25


State 20

    8 InnerScopeClass: ClassMembers ClassMethods .

    $default  reduce using rule 8 (InnerScopeClass)


State 21

   12 ClassMethods: MethodName . ClassMethods
   13             | MethodName .

    T_ID  shift, and go to state 19

    T_CLOSE_BRACKET  reduce using rule 13 (ClassMethods)
    T_CLOSE_BRACKET  [reduce using rule 14 (ClassMethods)]
    $default         reduce using rule 13 (ClassMethods)

    ClassMethods  go to state 26
    MethodName    go to state 21


State 22

    9 ClassMembers: Type T_ID . T_SEMICOLON ClassMembers
   10             | Type T_ID . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 27


State 23

    6 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET . T_CLOSE_BRACKET T_SEMICOLON
    7          | T_ID T_EXTENDS T_ID T_OPEN_BRACKET . InnerScopeClass T_CLOSE_BRACKET T_SEMICOLON

    T_ID             shift, and go to state 9
    T_CLOSE_BRACKET  shift, and go to state 28
    T_INTEGER        shift, and go to state 11
    T_BOOL           shift, and go to state 12

    T_ID             [reduce using rule 11 (ClassMembers)]
    T_CLOSE_BRACKET  [reduce using rule 11 (ClassMembers)]

    InnerScopeClass  go to state 29
    ClassMembers     go to state 14
    Type             go to state 15


State 24

    5 ClassName: T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET T_SEMICOLON .

    $default  reduce using rule 5 (ClassName)


State 25

   18 MethodName: T_ID T_OPENPAREN . Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   19           | T_ID T_OPENPAREN . Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET
   20           | T_ID T_OPENPAREN . T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   21           | T_ID T_OPENPAREN . T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_ID          shift, and go to state 30
    T_CLOSEPAREN  shift, and go to state 31

    Parameters  go to state 32
    Parameter   go to state 33


State 26

   12 ClassMethods: MethodName ClassMethods .

    $default  reduce using rule 12 (ClassMethods)


State 27

    9 ClassMembers: Type T_ID T_SEMICOLON . ClassMembers
   10             | Type T_ID T_SEMICOLON .

    T_ID       shift, and go to state 9
    T_INTEGER  shift, and go to state 11
    T_BOOL     shift, and go to state 12

    T_ID             [reduce using rule 10 (ClassMembers)]
    T_ID             [reduce using rule 11 (ClassMembers)]
    T_CLOSE_BRACKET  reduce using rule 10 (ClassMembers)
    T_CLOSE_BRACKET  [reduce using rule 11 (ClassMembers)]
    $default         reduce using rule 10 (ClassMembers)

    ClassMembers  go to state 34
    Type          go to state 15


State 28

    6 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET T_CLOSE_BRACKET . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 35


State 29

    7 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET InnerScopeClass . T_CLOSE_BRACKET T_SEMICOLON

    T_CLOSE_BRACKET  shift, and go to state 36


State 30

   17 Parameter: T_ID . T_COLON Type

    T_COLON  shift, and go to state 37


State 31

   20 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN . T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   21           | T_ID T_OPENPAREN T_CLOSEPAREN . T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_LAMBDA  shift, and go to state 38


State 32

   15 Parameters: Parameters . T_COMMA Parameter
   18 MethodName: T_ID T_OPENPAREN Parameters . T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   19           | T_ID T_OPENPAREN Parameters . T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_CLOSEPAREN  shift, and go to state 39
    T_COMMA       shift, and go to state 40


State 33

   16 Parameters: Parameter .

    $default  reduce using rule 16 (Parameters)


State 34

    9 ClassMembers: Type T_ID T_SEMICOLON ClassMembers .

    $default  reduce using rule 9 (ClassMembers)


State 35

    6 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET T_CLOSE_BRACKET T_SEMICOLON .

    $default  reduce using rule 6 (ClassName)


State 36

    7 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 41


State 37

   17 Parameter: T_ID T_COLON . Type

    T_ID       shift, and go to state 9
    T_INTEGER  shift, and go to state 11
    T_BOOL     shift, and go to state 12

    Type  go to state 42


State 38

   20 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA . ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   21           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA . ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_ID       shift, and go to state 9
    T_INTEGER  shift, and go to state 11
    T_NONE     shift, and go to state 43
    T_BOOL     shift, and go to state 12

    Type        go to state 44
    ReturnType  go to state 45


State 39

   18 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN . T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   19           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN . T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_LAMBDA  shift, and go to state 46


State 40

   15 Parameters: Parameters T_COMMA . Parameter

    T_ID  shift, and go to state 30

    Parameter  go to state 47


State 41

    7 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET T_SEMICOLON .

    $default  reduce using rule 7 (ClassName)


State 42

   17 Parameter: T_ID T_COLON Type .

    $default  reduce using rule 17 (Parameter)


State 43

   61 ReturnType: T_NONE .

    $default  reduce using rule 61 (ReturnType)


State 44

   60 ReturnType: Type .

    $default  reduce using rule 60 (ReturnType)


State 45

   20 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType . T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   21           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType . T_OPEN_BRACKET T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 48


State 46

   18 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA . ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   19           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA . ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_ID       shift, and go to state 9
    T_INTEGER  shift, and go to state 11
    T_NONE     shift, and go to state 43
    T_BOOL     shift, and go to state 12

    Type        go to state 44
    ReturnType  go to state 49


State 47

   15 Parameters: Parameters T_COMMA Parameter .

    $default  reduce using rule 15 (Parameters)


State 48

   20 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET . InnerScopeMethod T_CLOSE_BRACKET
   21           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET . T_CLOSE_BRACKET

    T_ID             shift, and go to state 50
    T_CLOSE_BRACKET  shift, and go to state 51
    T_INTEGER        shift, and go to state 11
    T_PRINT          shift, and go to state 52
    T_IF             shift, and go to state 53
    T_WHILE          shift, and go to state 54
    T_BOOL           shift, and go to state 12
    T_REPEAT         shift, and go to state 55

    T_ID             [reduce using rule 29 (Statements)]
    T_ID             [reduce using rule 38 (Assignment)]
    T_ID             [reduce using rule 43 (MethodCall)]
    T_CLOSE_BRACKET  [reduce using rule 29 (Statements)]
    T_CLOSE_BRACKET  [reduce using rule 38 (Assignment)]
    T_CLOSE_BRACKET  [reduce using rule 43 (MethodCall)]
    T_INTEGER        [reduce using rule 29 (Statements)]
    T_INTEGER        [reduce using rule 38 (Assignment)]
    T_INTEGER        [reduce using rule 43 (MethodCall)]
    T_PRINT          [reduce using rule 29 (Statements)]
    T_PRINT          [reduce using rule 38 (Assignment)]
    T_PRINT          [reduce using rule 43 (MethodCall)]
    T_IF             [reduce using rule 29 (Statements)]
    T_IF             [reduce using rule 38 (Assignment)]
    T_IF             [reduce using rule 43 (MethodCall)]
    T_WHILE          [reduce using rule 29 (Statements)]
    T_WHILE          [reduce using rule 38 (Assignment)]
    T_WHILE          [reduce using rule 43 (MethodCall)]
    T_BOOL           [reduce using rule 29 (Statements)]
    T_BOOL           [reduce using rule 38 (Assignment)]
    T_BOOL           [reduce using rule 43 (MethodCall)]
    T_REPEAT         [reduce using rule 29 (Statements)]
    T_REPEAT         [reduce using rule 38 (Assignment)]
    T_REPEAT         [reduce using rule 43 (MethodCall)]

    InnerScopeMethod  go to state 56
    Declaration       go to state 57
    Statements        go to state 58
    Statement         go to state 59
    Assignment        go to state 60
    MethodCall        go to state 61
    IfElse            go to state 62
    While             go to state 63
    RepeatUntil       go to state 64
    Print             go to state 65
    Type              go to state 66


State 49

   18 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType . T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   19           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType . T_OPEN_BRACKET T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 67


State 50

   37 Assignment: T_ID . T_DOT T_ID T_ASSIGN Exp T_SEMICOLON
   39 MethodCall: T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   40           | T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   41           | T_ID . T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   42           | T_ID . T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   59 Type: T_ID .

    T_OPENPAREN  shift, and go to state 68
    T_DOT        shift, and go to state 69

    $default  reduce using rule 59 (Type)


State 51

   21 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 21 (MethodName)


State 52

   52 Print: T_PRINT . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 79


State 53

   44 IfElse: T_IF . Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET
   45       | T_IF . Exp T_OPEN_BRACKET T_CLOSE_BRACKET
   46       | T_IF . Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET
   47       | T_IF . Exp T_OPEN_BRACKET T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET T_CLOSE_BRACKET

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 80


State 54

   48 While: T_WHILE . Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET
   49      | T_WHILE . Exp T_OPEN_BRACKET T_CLOSE_BRACKET

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 81


State 55

   50 RepeatUntil: T_REPEAT . T_OPEN_BRACKET Block T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON
   51            | T_REPEAT . T_OPEN_BRACKET T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON

    T_OPEN_BRACKET  shift, and go to state 82


State 56

   20 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 83


State 57

   22 InnerScopeMethod: Declaration . Statements ReturnStatement
   23                 | Declaration . Statements
   25 Declaration: Declaration . Type T_ID T_SEMICOLON

    T_ID       shift, and go to state 50
    T_INTEGER  shift, and go to state 11
    T_PRINT    shift, and go to state 52
    T_IF       shift, and go to state 53
    T_WHILE    shift, and go to state 54
    T_BOOL     shift, and go to state 12
    T_REPEAT   shift, and go to state 55

    T_ID             [reduce using rule 29 (Statements)]
    T_ID             [reduce using rule 38 (Assignment)]
    T_ID             [reduce using rule 43 (MethodCall)]
    T_CLOSE_BRACKET  reduce using rule 29 (Statements)
    T_CLOSE_BRACKET  [reduce using rule 38 (Assignment)]
    T_CLOSE_BRACKET  [reduce using rule 43 (MethodCall)]
    T_INTEGER        [reduce using rule 29 (Statements)]
    T_INTEGER        [reduce using rule 38 (Assignment)]
    T_INTEGER        [reduce using rule 43 (MethodCall)]
    T_PRINT          [reduce using rule 29 (Statements)]
    T_PRINT          [reduce using rule 38 (Assignment)]
    T_PRINT          [reduce using rule 43 (MethodCall)]
    T_RETURN         reduce using rule 29 (Statements)
    T_RETURN         [reduce using rule 38 (Assignment)]
    T_RETURN         [reduce using rule 43 (MethodCall)]
    T_IF             [reduce using rule 29 (Statements)]
    T_IF             [reduce using rule 38 (Assignment)]
    T_IF             [reduce using rule 43 (MethodCall)]
    T_WHILE          [reduce using rule 29 (Statements)]
    T_WHILE          [reduce using rule 38 (Assignment)]
    T_WHILE          [reduce using rule 43 (MethodCall)]
    T_BOOL           [reduce using rule 29 (Statements)]
    T_BOOL           [reduce using rule 38 (Assignment)]
    T_BOOL           [reduce using rule 43 (MethodCall)]
    T_REPEAT         [reduce using rule 29 (Statements)]
    T_REPEAT         [reduce using rule 38 (Assignment)]
    T_REPEAT         [reduce using rule 43 (MethodCall)]
    $default         reduce using rule 29 (Statements)

    Statements   go to state 84
    Statement    go to state 59
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Type         go to state 85


State 58

   24 InnerScopeMethod: Statements .
   27 Statements: Statements . Statement

    T_ID       shift, and go to state 50
    T_INTEGER  shift, and go to state 11
    T_PRINT    shift, and go to state 52
    T_IF       shift, and go to state 53
    T_WHILE    shift, and go to state 54
    T_BOOL     shift, and go to state 12
    T_REPEAT   shift, and go to state 55

    T_ID             [reduce using rule 38 (Assignment)]
    T_ID             [reduce using rule 43 (MethodCall)]
    T_CLOSE_BRACKET  reduce using rule 24 (InnerScopeMethod)
    T_CLOSE_BRACKET  [reduce using rule 38 (Assignment)]
    T_CLOSE_BRACKET  [reduce using rule 43 (MethodCall)]
    T_INTEGER        [reduce using rule 38 (Assignment)]
    T_INTEGER        [reduce using rule 43 (MethodCall)]
    T_PRINT          [reduce using rule 38 (Assignment)]
    T_PRINT          [reduce using rule 43 (MethodCall)]
    T_IF             [reduce using rule 38 (Assignment)]
    T_IF             [reduce using rule 43 (MethodCall)]
    T_WHILE          [reduce using rule 38 (Assignment)]
    T_WHILE          [reduce using rule 43 (MethodCall)]
    T_BOOL           [reduce using rule 38 (Assignment)]
    T_BOOL           [reduce using rule 43 (MethodCall)]
    T_REPEAT         [reduce using rule 38 (Assignment)]
    T_REPEAT         [reduce using rule 43 (MethodCall)]
    $default         reduce using rule 24 (InnerScopeMethod)

    Statement    go to state 86
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Type         go to state 87


State 59

   28 Statements: Statement .

    $default  reduce using rule 28 (Statements)


State 60

   30 Statement: Assignment .

    $default  reduce using rule 30 (Statement)


State 61

   31 Statement: MethodCall .

    $default  reduce using rule 31 (Statement)


State 62

   32 Statement: IfElse .

    $default  reduce using rule 32 (Statement)


State 63

   33 Statement: While .

    $default  reduce using rule 33 (Statement)


State 64

   34 Statement: RepeatUntil .

    $default  reduce using rule 34 (Statement)


State 65

   35 Statement: Print .

    $default  reduce using rule 35 (Statement)


State 66

   26 Declaration: Type . T_ID T_SEMICOLON
   36 Assignment: Type . T_ASSIGN Exp T_SEMICOLON

    T_ID      shift, and go to state 88
    T_ASSIGN  shift, and go to state 89


State 67

   18 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET . InnerScopeMethod T_CLOSE_BRACKET
   19           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET . T_CLOSE_BRACKET

    T_ID             shift, and go to state 50
    T_CLOSE_BRACKET  shift, and go to state 90
    T_INTEGER        shift, and go to state 11
    T_PRINT          shift, and go to state 52
    T_IF             shift, and go to state 53
    T_WHILE          shift, and go to state 54
    T_BOOL           shift, and go to state 12
    T_REPEAT         shift, and go to state 55

    T_ID             [reduce using rule 29 (Statements)]
    T_ID             [reduce using rule 38 (Assignment)]
    T_ID             [reduce using rule 43 (MethodCall)]
    T_CLOSE_BRACKET  [reduce using rule 29 (Statements)]
    T_CLOSE_BRACKET  [reduce using rule 38 (Assignment)]
    T_CLOSE_BRACKET  [reduce using rule 43 (MethodCall)]
    T_INTEGER        [reduce using rule 29 (Statements)]
    T_INTEGER        [reduce using rule 38 (Assignment)]
    T_INTEGER        [reduce using rule 43 (MethodCall)]
    T_PRINT          [reduce using rule 29 (Statements)]
    T_PRINT          [reduce using rule 38 (Assignment)]
    T_PRINT          [reduce using rule 43 (MethodCall)]
    T_IF             [reduce using rule 29 (Statements)]
    T_IF             [reduce using rule 38 (Assignment)]
    T_IF             [reduce using rule 43 (MethodCall)]
    T_WHILE          [reduce using rule 29 (Statements)]
    T_WHILE          [reduce using rule 38 (Assignment)]
    T_WHILE          [reduce using rule 43 (MethodCall)]
    T_BOOL           [reduce using rule 29 (Statements)]
    T_BOOL           [reduce using rule 38 (Assignment)]
    T_BOOL           [reduce using rule 43 (MethodCall)]
    T_REPEAT         [reduce using rule 29 (Statements)]
    T_REPEAT         [reduce using rule 38 (Assignment)]
    T_REPEAT         [reduce using rule 43 (MethodCall)]

    InnerScopeMethod  go to state 91
    Declaration       go to state 57
    Statements        go to state 58
    Statement         go to state 59
    Assignment        go to state 60
    MethodCall        go to state 61
    IfElse            go to state 62
    While             go to state 63
    RepeatUntil       go to state 64
    Print             go to state 65
    Type              go to state 66


State 68

   39 MethodCall: T_ID T_OPENPAREN . Parameters T_CLOSEPAREN T_SEMICOLON
   40           | T_ID T_OPENPAREN . T_CLOSEPAREN T_SEMICOLON

    T_ID          shift, and go to state 30
    T_CLOSEPAREN  shift, and go to state 92

    Parameters  go to state 93
    Parameter   go to state 33


State 69

   37 Assignment: T_ID T_DOT . T_ID T_ASSIGN Exp T_SEMICOLON
   41 MethodCall: T_ID T_DOT . T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   42           | T_ID T_DOT . T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_ID  shift, and go to state 94


State 70

   72 Exp: T_MINUS . Exp

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 95


State 71

   71 Exp: T_NOT . Exp

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 96


State 72

   39 MethodCall: T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   40           | T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   41           | T_ID . T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   42           | T_ID . T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   73 Exp: T_ID .
   74    | T_ID . T_DOT T_ID

    T_OPENPAREN  shift, and go to state 68
    T_DOT        shift, and go to state 97

    $default  reduce using rule 73 (Exp)


State 73

   76 Exp: T_OPENPAREN . Exp T_CLOSEPAREN

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 98


State 74

   77 Exp: T_NUMBER .

    $default  reduce using rule 77 (Exp)


State 75

   78 Exp: T_TRUE .

    $default  reduce using rule 78 (Exp)


State 76

   79 Exp: T_FALSE .

    $default  reduce using rule 79 (Exp)


State 77

   80 Exp: T_NEW . T_ID
   81    | T_NEW . T_ID T_OPENPAREN Parameters T_CLOSEPAREN

    T_ID  shift, and go to state 99


State 78

   75 Exp: MethodCall .

    $default  reduce using rule 75 (Exp)


State 79

   52 Print: T_PRINT Exp . T_SEMICOLON
   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_PLUS         shift, and go to state 100
    T_MINUS        shift, and go to state 101
    T_MULTIPLY     shift, and go to state 102
    T_DIVIDE       shift, and go to state 103
    T_LSS          shift, and go to state 104
    T_LEQ          shift, and go to state 105
    T_EQUIVALENCE  shift, and go to state 106
    T_AND          shift, and go to state 107
    T_OR           shift, and go to state 108
    T_SEMICOLON    shift, and go to state 109


State 80

   44 IfElse: T_IF Exp . T_OPEN_BRACKET Block T_CLOSE_BRACKET
   45       | T_IF Exp . T_OPEN_BRACKET T_CLOSE_BRACKET
   46       | T_IF Exp . T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET
   47       | T_IF Exp . T_OPEN_BRACKET T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET T_CLOSE_BRACKET
   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_PLUS          shift, and go to state 100
    T_MINUS         shift, and go to state 101
    T_MULTIPLY      shift, and go to state 102
    T_DIVIDE        shift, and go to state 103
    T_LSS           shift, and go to state 104
    T_LEQ           shift, and go to state 105
    T_EQUIVALENCE   shift, and go to state 106
    T_AND           shift, and go to state 107
    T_OR            shift, and go to state 108
    T_OPEN_BRACKET  shift, and go to state 110


State 81

   48 While: T_WHILE Exp . T_OPEN_BRACKET Block T_CLOSE_BRACKET
   49      | T_WHILE Exp . T_OPEN_BRACKET T_CLOSE_BRACKET
   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_PLUS          shift, and go to state 100
    T_MINUS         shift, and go to state 101
    T_MULTIPLY      shift, and go to state 102
    T_DIVIDE        shift, and go to state 103
    T_LSS           shift, and go to state 104
    T_LEQ           shift, and go to state 105
    T_EQUIVALENCE   shift, and go to state 106
    T_AND           shift, and go to state 107
    T_OR            shift, and go to state 108
    T_OPEN_BRACKET  shift, and go to state 111


State 82

   50 RepeatUntil: T_REPEAT T_OPEN_BRACKET . Block T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON
   51            | T_REPEAT T_OPEN_BRACKET . T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON

    T_ID             shift, and go to state 50
    T_CLOSE_BRACKET  shift, and go to state 112
    T_INTEGER        shift, and go to state 11
    T_PRINT          shift, and go to state 52
    T_IF             shift, and go to state 53
    T_WHILE          shift, and go to state 54
    T_BOOL           shift, and go to state 12
    T_REPEAT         shift, and go to state 55

    T_PLUS         reduce using rule 38 (Assignment)
    T_PLUS         [reduce using rule 43 (MethodCall)]
    T_MINUS        reduce using rule 38 (Assignment)
    T_MINUS        [reduce using rule 43 (MethodCall)]
    T_MULTIPLY     reduce using rule 38 (Assignment)
    T_MULTIPLY     [reduce using rule 43 (MethodCall)]
    T_DIVIDE       reduce using rule 38 (Assignment)
    T_DIVIDE       [reduce using rule 43 (MethodCall)]
    T_LSS          reduce using rule 38 (Assignment)
    T_LSS          [reduce using rule 43 (MethodCall)]
    T_LEQ          reduce using rule 38 (Assignment)
    T_LEQ          [reduce using rule 43 (MethodCall)]
    T_EQUIVALENCE  reduce using rule 38 (Assignment)
    T_EQUIVALENCE  [reduce using rule 43 (MethodCall)]
    T_AND          reduce using rule 38 (Assignment)
    T_AND          [reduce using rule 43 (MethodCall)]
    T_OR           reduce using rule 38 (Assignment)
    T_OR           [reduce using rule 43 (MethodCall)]
    T_NOT          reduce using rule 38 (Assignment)
    T_NOT          [reduce using rule 43 (MethodCall)]
    T_ID           [reduce using rule 38 (Assignment)]
    T_ID           [reduce using rule 43 (MethodCall)]
    T_OPENPAREN    reduce using rule 38 (Assignment)
    T_OPENPAREN    [reduce using rule 43 (MethodCall)]
    T_NUMBER       reduce using rule 38 (Assignment)
    T_NUMBER       [reduce using rule 43 (MethodCall)]
    T_TRUE         reduce using rule 38 (Assignment)
    T_TRUE         [reduce using rule 43 (MethodCall)]
    T_FALSE        reduce using rule 38 (Assignment)
    T_FALSE        [reduce using rule 43 (MethodCall)]
    T_SEMICOLON    reduce using rule 38 (Assignment)
    T_SEMICOLON    [reduce using rule 43 (MethodCall)]
    T_NEW          reduce using rule 38 (Assignment)
    T_NEW          [reduce using rule 43 (MethodCall)]
    $default       reduce using rule 38 (Assignment)

    Statement    go to state 113
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Block        go to state 114
    Type         go to state 87


State 83

   20 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET .

    $default  reduce using rule 20 (MethodName)


State 84

   22 InnerScopeMethod: Declaration Statements . ReturnStatement
   23                 | Declaration Statements .
   27 Statements: Statements . Statement

    T_ID       shift, and go to state 50
    T_INTEGER  shift, and go to state 11
    T_PRINT    shift, and go to state 52
    T_RETURN   shift, and go to state 115
    T_IF       shift, and go to state 53
    T_WHILE    shift, and go to state 54
    T_BOOL     shift, and go to state 12
    T_REPEAT   shift, and go to state 55

    T_ID             [reduce using rule 38 (Assignment)]
    T_ID             [reduce using rule 43 (MethodCall)]
    T_CLOSE_BRACKET  reduce using rule 23 (InnerScopeMethod)
    T_CLOSE_BRACKET  [reduce using rule 38 (Assignment)]
    T_CLOSE_BRACKET  [reduce using rule 43 (MethodCall)]
    T_CLOSE_BRACKET  [reduce using rule 56 (ReturnStatement)]
    T_INTEGER        [reduce using rule 38 (Assignment)]
    T_INTEGER        [reduce using rule 43 (MethodCall)]
    T_PRINT          [reduce using rule 38 (Assignment)]
    T_PRINT          [reduce using rule 43 (MethodCall)]
    T_RETURN         [reduce using rule 38 (Assignment)]
    T_RETURN         [reduce using rule 43 (MethodCall)]
    T_IF             [reduce using rule 38 (Assignment)]
    T_IF             [reduce using rule 43 (MethodCall)]
    T_WHILE          [reduce using rule 38 (Assignment)]
    T_WHILE          [reduce using rule 43 (MethodCall)]
    T_BOOL           [reduce using rule 38 (Assignment)]
    T_BOOL           [reduce using rule 43 (MethodCall)]
    T_REPEAT         [reduce using rule 38 (Assignment)]
    T_REPEAT         [reduce using rule 43 (MethodCall)]
    $default         reduce using rule 23 (InnerScopeMethod)

    Statement        go to state 86
    Assignment       go to state 60
    MethodCall       go to state 61
    IfElse           go to state 62
    While            go to state 63
    RepeatUntil      go to state 64
    Print            go to state 65
    ReturnStatement  go to state 116
    Type             go to state 87


State 85

   25 Declaration: Declaration Type . T_ID T_SEMICOLON
   36 Assignment: Type . T_ASSIGN Exp T_SEMICOLON

    T_ID      shift, and go to state 117
    T_ASSIGN  shift, and go to state 89


State 86

   27 Statements: Statements Statement .

    $default  reduce using rule 27 (Statements)


State 87

   36 Assignment: Type . T_ASSIGN Exp T_SEMICOLON

    T_ASSIGN  shift, and go to state 89


State 88

   26 Declaration: Type T_ID . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 118


State 89

   36 Assignment: Type T_ASSIGN . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 119


State 90

   19 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 19 (MethodName)


State 91

   18 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 120


State 92

   40 MethodCall: T_ID T_OPENPAREN T_CLOSEPAREN . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 121


State 93

   15 Parameters: Parameters . T_COMMA Parameter
   39 MethodCall: T_ID T_OPENPAREN Parameters . T_CLOSEPAREN T_SEMICOLON

    T_CLOSEPAREN  shift, and go to state 122
    T_COMMA       shift, and go to state 40


State 94

   37 Assignment: T_ID T_DOT T_ID . T_ASSIGN Exp T_SEMICOLON
   41 MethodCall: T_ID T_DOT T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   42           | T_ID T_DOT T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_OPENPAREN  shift, and go to state 123
    T_ASSIGN     shift, and go to state 124


State 95

   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp
   72    | T_MINUS Exp .

    $default  reduce using rule 72 (Exp)


State 96

   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp
   71    | T_NOT Exp .

    $default  reduce using rule 71 (Exp)


State 97

   41 MethodCall: T_ID T_DOT . T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   42           | T_ID T_DOT . T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   74 Exp: T_ID T_DOT . T_ID

    T_ID  shift, and go to state 125


State 98

   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp
   76    | T_OPENPAREN Exp . T_CLOSEPAREN

    T_PLUS         shift, and go to state 100
    T_MINUS        shift, and go to state 101
    T_MULTIPLY     shift, and go to state 102
    T_DIVIDE       shift, and go to state 103
    T_LSS          shift, and go to state 104
    T_LEQ          shift, and go to state 105
    T_EQUIVALENCE  shift, and go to state 106
    T_AND          shift, and go to state 107
    T_OR           shift, and go to state 108
    T_CLOSEPAREN   shift, and go to state 126


State 99

   80 Exp: T_NEW T_ID .
   81    | T_NEW T_ID . T_OPENPAREN Parameters T_CLOSEPAREN

    T_OPENPAREN  shift, and go to state 127

    $default  reduce using rule 80 (Exp)


State 100

   62 Exp: Exp T_PLUS . Exp

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 128


State 101

   63 Exp: Exp T_MINUS . Exp

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 129


State 102

   64 Exp: Exp T_MULTIPLY . Exp

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 130


State 103

   65 Exp: Exp T_DIVIDE . Exp

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 131


State 104

   66 Exp: Exp T_LSS . Exp

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 132


State 105

   67 Exp: Exp T_LEQ . Exp

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 133


State 106

   68 Exp: Exp T_EQUIVALENCE . Exp

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 134


State 107

   69 Exp: Exp T_AND . Exp

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 135


State 108

   70 Exp: Exp T_OR . Exp

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 136


State 109

   52 Print: T_PRINT Exp T_SEMICOLON .

    $default  reduce using rule 52 (Print)


State 110

   44 IfElse: T_IF Exp T_OPEN_BRACKET . Block T_CLOSE_BRACKET
   45       | T_IF Exp T_OPEN_BRACKET . T_CLOSE_BRACKET
   46       | T_IF Exp T_OPEN_BRACKET . Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET
   47       | T_IF Exp T_OPEN_BRACKET . T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET T_CLOSE_BRACKET

    T_ID             shift, and go to state 50
    T_CLOSE_BRACKET  shift, and go to state 137
    T_INTEGER        shift, and go to state 11
    T_PRINT          shift, and go to state 52
    T_IF             shift, and go to state 53
    T_WHILE          shift, and go to state 54
    T_BOOL           shift, and go to state 12
    T_REPEAT         shift, and go to state 55

    T_PLUS         reduce using rule 38 (Assignment)
    T_PLUS         [reduce using rule 43 (MethodCall)]
    T_MINUS        reduce using rule 38 (Assignment)
    T_MINUS        [reduce using rule 43 (MethodCall)]
    T_MULTIPLY     reduce using rule 38 (Assignment)
    T_MULTIPLY     [reduce using rule 43 (MethodCall)]
    T_DIVIDE       reduce using rule 38 (Assignment)
    T_DIVIDE       [reduce using rule 43 (MethodCall)]
    T_LSS          reduce using rule 38 (Assignment)
    T_LSS          [reduce using rule 43 (MethodCall)]
    T_LEQ          reduce using rule 38 (Assignment)
    T_LEQ          [reduce using rule 43 (MethodCall)]
    T_EQUIVALENCE  reduce using rule 38 (Assignment)
    T_EQUIVALENCE  [reduce using rule 43 (MethodCall)]
    T_AND          reduce using rule 38 (Assignment)
    T_AND          [reduce using rule 43 (MethodCall)]
    T_OR           reduce using rule 38 (Assignment)
    T_OR           [reduce using rule 43 (MethodCall)]
    T_NOT          reduce using rule 38 (Assignment)
    T_NOT          [reduce using rule 43 (MethodCall)]
    T_ID           [reduce using rule 38 (Assignment)]
    T_ID           [reduce using rule 43 (MethodCall)]
    T_OPENPAREN    reduce using rule 38 (Assignment)
    T_OPENPAREN    [reduce using rule 43 (MethodCall)]
    T_NUMBER       reduce using rule 38 (Assignment)
    T_NUMBER       [reduce using rule 43 (MethodCall)]
    T_TRUE         reduce using rule 38 (Assignment)
    T_TRUE         [reduce using rule 43 (MethodCall)]
    T_FALSE        reduce using rule 38 (Assignment)
    T_FALSE        [reduce using rule 43 (MethodCall)]
    T_SEMICOLON    reduce using rule 38 (Assignment)
    T_SEMICOLON    [reduce using rule 43 (MethodCall)]
    T_NEW          reduce using rule 38 (Assignment)
    T_NEW          [reduce using rule 43 (MethodCall)]
    $default       reduce using rule 38 (Assignment)

    Statement    go to state 113
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Block        go to state 138
    Type         go to state 87


State 111

   48 While: T_WHILE Exp T_OPEN_BRACKET . Block T_CLOSE_BRACKET
   49      | T_WHILE Exp T_OPEN_BRACKET . T_CLOSE_BRACKET

    T_ID             shift, and go to state 50
    T_CLOSE_BRACKET  shift, and go to state 139
    T_INTEGER        shift, and go to state 11
    T_PRINT          shift, and go to state 52
    T_IF             shift, and go to state 53
    T_WHILE          shift, and go to state 54
    T_BOOL           shift, and go to state 12
    T_REPEAT         shift, and go to state 55

    T_PLUS         reduce using rule 38 (Assignment)
    T_PLUS         [reduce using rule 43 (MethodCall)]
    T_MINUS        reduce using rule 38 (Assignment)
    T_MINUS        [reduce using rule 43 (MethodCall)]
    T_MULTIPLY     reduce using rule 38 (Assignment)
    T_MULTIPLY     [reduce using rule 43 (MethodCall)]
    T_DIVIDE       reduce using rule 38 (Assignment)
    T_DIVIDE       [reduce using rule 43 (MethodCall)]
    T_LSS          reduce using rule 38 (Assignment)
    T_LSS          [reduce using rule 43 (MethodCall)]
    T_LEQ          reduce using rule 38 (Assignment)
    T_LEQ          [reduce using rule 43 (MethodCall)]
    T_EQUIVALENCE  reduce using rule 38 (Assignment)
    T_EQUIVALENCE  [reduce using rule 43 (MethodCall)]
    T_AND          reduce using rule 38 (Assignment)
    T_AND          [reduce using rule 43 (MethodCall)]
    T_OR           reduce using rule 38 (Assignment)
    T_OR           [reduce using rule 43 (MethodCall)]
    T_NOT          reduce using rule 38 (Assignment)
    T_NOT          [reduce using rule 43 (MethodCall)]
    T_ID           [reduce using rule 38 (Assignment)]
    T_ID           [reduce using rule 43 (MethodCall)]
    T_OPENPAREN    reduce using rule 38 (Assignment)
    T_OPENPAREN    [reduce using rule 43 (MethodCall)]
    T_NUMBER       reduce using rule 38 (Assignment)
    T_NUMBER       [reduce using rule 43 (MethodCall)]
    T_TRUE         reduce using rule 38 (Assignment)
    T_TRUE         [reduce using rule 43 (MethodCall)]
    T_FALSE        reduce using rule 38 (Assignment)
    T_FALSE        [reduce using rule 43 (MethodCall)]
    T_SEMICOLON    reduce using rule 38 (Assignment)
    T_SEMICOLON    [reduce using rule 43 (MethodCall)]
    T_NEW          reduce using rule 38 (Assignment)
    T_NEW          [reduce using rule 43 (MethodCall)]
    $default       reduce using rule 38 (Assignment)

    Statement    go to state 113
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Block        go to state 140
    Type         go to state 87


State 112

   51 RepeatUntil: T_REPEAT T_OPEN_BRACKET T_CLOSE_BRACKET . T_UNTIL T_OPENPAREN Exp T_SEMICOLON

    T_UNTIL  shift, and go to state 141


State 113

   54 Block: Statement . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 142


State 114

   50 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block . T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON
   53 Block: Block . Statement Exp T_SEMICOLON

    T_ID             shift, and go to state 50
    T_CLOSE_BRACKET  shift, and go to state 143
    T_INTEGER        shift, and go to state 11
    T_PRINT          shift, and go to state 52
    T_IF             shift, and go to state 53
    T_WHILE          shift, and go to state 54
    T_BOOL           shift, and go to state 12
    T_REPEAT         shift, and go to state 55

    T_PLUS         reduce using rule 38 (Assignment)
    T_PLUS         [reduce using rule 43 (MethodCall)]
    T_MINUS        reduce using rule 38 (Assignment)
    T_MINUS        [reduce using rule 43 (MethodCall)]
    T_MULTIPLY     reduce using rule 38 (Assignment)
    T_MULTIPLY     [reduce using rule 43 (MethodCall)]
    T_DIVIDE       reduce using rule 38 (Assignment)
    T_DIVIDE       [reduce using rule 43 (MethodCall)]
    T_LSS          reduce using rule 38 (Assignment)
    T_LSS          [reduce using rule 43 (MethodCall)]
    T_LEQ          reduce using rule 38 (Assignment)
    T_LEQ          [reduce using rule 43 (MethodCall)]
    T_EQUIVALENCE  reduce using rule 38 (Assignment)
    T_EQUIVALENCE  [reduce using rule 43 (MethodCall)]
    T_AND          reduce using rule 38 (Assignment)
    T_AND          [reduce using rule 43 (MethodCall)]
    T_OR           reduce using rule 38 (Assignment)
    T_OR           [reduce using rule 43 (MethodCall)]
    T_NOT          reduce using rule 38 (Assignment)
    T_NOT          [reduce using rule 43 (MethodCall)]
    T_ID           [reduce using rule 38 (Assignment)]
    T_ID           [reduce using rule 43 (MethodCall)]
    T_OPENPAREN    reduce using rule 38 (Assignment)
    T_OPENPAREN    [reduce using rule 43 (MethodCall)]
    T_NUMBER       reduce using rule 38 (Assignment)
    T_NUMBER       [reduce using rule 43 (MethodCall)]
    T_TRUE         reduce using rule 38 (Assignment)
    T_TRUE         [reduce using rule 43 (MethodCall)]
    T_FALSE        reduce using rule 38 (Assignment)
    T_FALSE        [reduce using rule 43 (MethodCall)]
    T_SEMICOLON    reduce using rule 38 (Assignment)
    T_SEMICOLON    [reduce using rule 43 (MethodCall)]
    T_NEW          reduce using rule 38 (Assignment)
    T_NEW          [reduce using rule 43 (MethodCall)]
    $default       reduce using rule 38 (Assignment)

    Statement    go to state 144
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Type         go to state 87


State 115

   55 ReturnStatement: T_RETURN . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 145


State 116

   22 InnerScopeMethod: Declaration Statements ReturnStatement .

    $default  reduce using rule 22 (InnerScopeMethod)


State 117

   25 Declaration: Declaration Type T_ID . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 146


State 118

   26 Declaration: Type T_ID T_SEMICOLON .

    $default  reduce using rule 26 (Declaration)


State 119

   36 Assignment: Type T_ASSIGN Exp . T_SEMICOLON
   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_PLUS         shift, and go to state 100
    T_MINUS        shift, and go to state 101
    T_MULTIPLY     shift, and go to state 102
    T_DIVIDE       shift, and go to state 103
    T_LSS          shift, and go to state 104
    T_LEQ          shift, and go to state 105
    T_EQUIVALENCE  shift, and go to state 106
    T_AND          shift, and go to state 107
    T_OR           shift, and go to state 108
    T_SEMICOLON    shift, and go to state 147


State 120

   18 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET .

    $default  reduce using rule 18 (MethodName)


State 121

   40 MethodCall: T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON .

    $default  reduce using rule 40 (MethodCall)


State 122

   39 MethodCall: T_ID T_OPENPAREN Parameters T_CLOSEPAREN . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 148


State 123

   41 MethodCall: T_ID T_DOT T_ID T_OPENPAREN . Parameters T_CLOSEPAREN T_SEMICOLON
   42           | T_ID T_DOT T_ID T_OPENPAREN . T_CLOSEPAREN T_SEMICOLON

    T_ID          shift, and go to state 30
    T_CLOSEPAREN  shift, and go to state 149

    Parameters  go to state 150
    Parameter   go to state 33


State 124

   37 Assignment: T_ID T_DOT T_ID T_ASSIGN . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 151


State 125

   41 MethodCall: T_ID T_DOT T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   42           | T_ID T_DOT T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   74 Exp: T_ID T_DOT T_ID .

    T_OPENPAREN  shift, and go to state 123

    $default  reduce using rule 74 (Exp)


State 126

   76 Exp: T_OPENPAREN Exp T_CLOSEPAREN .

    $default  reduce using rule 76 (Exp)


State 127

   81 Exp: T_NEW T_ID T_OPENPAREN . Parameters T_CLOSEPAREN

    T_ID  shift, and go to state 30

    Parameters  go to state 152
    Parameter   go to state 33


State 128

   62 Exp: Exp . T_PLUS Exp
   62    | Exp T_PLUS Exp .
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_MULTIPLY  shift, and go to state 102
    T_DIVIDE    shift, and go to state 103

    $default  reduce using rule 62 (Exp)


State 129

   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   63    | Exp T_MINUS Exp .
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_MULTIPLY  shift, and go to state 102
    T_DIVIDE    shift, and go to state 103

    $default  reduce using rule 63 (Exp)


State 130

   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   64    | Exp T_MULTIPLY Exp .
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    $default  reduce using rule 64 (Exp)


State 131

   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   65    | Exp T_DIVIDE Exp .
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    $default  reduce using rule 65 (Exp)


State 132

   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   66    | Exp T_LSS Exp .
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_PLUS      shift, and go to state 100
    T_MINUS     shift, and go to state 101
    T_MULTIPLY  shift, and go to state 102
    T_DIVIDE    shift, and go to state 103

    $default  reduce using rule 66 (Exp)


State 133

   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   67    | Exp T_LEQ Exp .
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_PLUS      shift, and go to state 100
    T_MINUS     shift, and go to state 101
    T_MULTIPLY  shift, and go to state 102
    T_DIVIDE    shift, and go to state 103

    $default  reduce using rule 67 (Exp)


State 134

   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   68    | Exp T_EQUIVALENCE Exp .
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_PLUS      shift, and go to state 100
    T_MINUS     shift, and go to state 101
    T_MULTIPLY  shift, and go to state 102
    T_DIVIDE    shift, and go to state 103

    $default  reduce using rule 68 (Exp)


State 135

   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   69    | Exp T_AND Exp .
   70    | Exp . T_OR Exp

    T_PLUS         shift, and go to state 100
    T_MINUS        shift, and go to state 101
    T_MULTIPLY     shift, and go to state 102
    T_DIVIDE       shift, and go to state 103
    T_LSS          shift, and go to state 104
    T_LEQ          shift, and go to state 105
    T_EQUIVALENCE  shift, and go to state 106

    $default  reduce using rule 69 (Exp)


State 136

   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp
   70    | Exp T_OR Exp .

    T_PLUS         shift, and go to state 100
    T_MINUS        shift, and go to state 101
    T_MULTIPLY     shift, and go to state 102
    T_DIVIDE       shift, and go to state 103
    T_LSS          shift, and go to state 104
    T_LEQ          shift, and go to state 105
    T_EQUIVALENCE  shift, and go to state 106
    T_AND          shift, and go to state 107

    $default  reduce using rule 70 (Exp)


State 137

   45 IfElse: T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET .
   47       | T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET . T_ELSE T_OPEN_BRACKET T_CLOSE_BRACKET

    T_ELSE  shift, and go to state 153

    $default  reduce using rule 45 (IfElse)


State 138

   44 IfElse: T_IF Exp T_OPEN_BRACKET Block . T_CLOSE_BRACKET
   46       | T_IF Exp T_OPEN_BRACKET Block . T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET
   53 Block: Block . Statement Exp T_SEMICOLON

    T_ID             shift, and go to state 50
    T_CLOSE_BRACKET  shift, and go to state 154
    T_INTEGER        shift, and go to state 11
    T_PRINT          shift, and go to state 52
    T_IF             shift, and go to state 53
    T_WHILE          shift, and go to state 54
    T_BOOL           shift, and go to state 12
    T_REPEAT         shift, and go to state 55

    T_PLUS         reduce using rule 38 (Assignment)
    T_PLUS         [reduce using rule 43 (MethodCall)]
    T_MINUS        reduce using rule 38 (Assignment)
    T_MINUS        [reduce using rule 43 (MethodCall)]
    T_MULTIPLY     reduce using rule 38 (Assignment)
    T_MULTIPLY     [reduce using rule 43 (MethodCall)]
    T_DIVIDE       reduce using rule 38 (Assignment)
    T_DIVIDE       [reduce using rule 43 (MethodCall)]
    T_LSS          reduce using rule 38 (Assignment)
    T_LSS          [reduce using rule 43 (MethodCall)]
    T_LEQ          reduce using rule 38 (Assignment)
    T_LEQ          [reduce using rule 43 (MethodCall)]
    T_EQUIVALENCE  reduce using rule 38 (Assignment)
    T_EQUIVALENCE  [reduce using rule 43 (MethodCall)]
    T_AND          reduce using rule 38 (Assignment)
    T_AND          [reduce using rule 43 (MethodCall)]
    T_OR           reduce using rule 38 (Assignment)
    T_OR           [reduce using rule 43 (MethodCall)]
    T_NOT          reduce using rule 38 (Assignment)
    T_NOT          [reduce using rule 43 (MethodCall)]
    T_ID           [reduce using rule 38 (Assignment)]
    T_ID           [reduce using rule 43 (MethodCall)]
    T_OPENPAREN    reduce using rule 38 (Assignment)
    T_OPENPAREN    [reduce using rule 43 (MethodCall)]
    T_NUMBER       reduce using rule 38 (Assignment)
    T_NUMBER       [reduce using rule 43 (MethodCall)]
    T_TRUE         reduce using rule 38 (Assignment)
    T_TRUE         [reduce using rule 43 (MethodCall)]
    T_FALSE        reduce using rule 38 (Assignment)
    T_FALSE        [reduce using rule 43 (MethodCall)]
    T_SEMICOLON    reduce using rule 38 (Assignment)
    T_SEMICOLON    [reduce using rule 43 (MethodCall)]
    T_NEW          reduce using rule 38 (Assignment)
    T_NEW          [reduce using rule 43 (MethodCall)]
    $default       reduce using rule 38 (Assignment)

    Statement    go to state 144
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Type         go to state 87


State 139

   49 While: T_WHILE Exp T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 49 (While)


State 140

   48 While: T_WHILE Exp T_OPEN_BRACKET Block . T_CLOSE_BRACKET
   53 Block: Block . Statement Exp T_SEMICOLON

    T_ID             shift, and go to state 50
    T_CLOSE_BRACKET  shift, and go to state 155
    T_INTEGER        shift, and go to state 11
    T_PRINT          shift, and go to state 52
    T_IF             shift, and go to state 53
    T_WHILE          shift, and go to state 54
    T_BOOL           shift, and go to state 12
    T_REPEAT         shift, and go to state 55

    T_PLUS         reduce using rule 38 (Assignment)
    T_PLUS         [reduce using rule 43 (MethodCall)]
    T_MINUS        reduce using rule 38 (Assignment)
    T_MINUS        [reduce using rule 43 (MethodCall)]
    T_MULTIPLY     reduce using rule 38 (Assignment)
    T_MULTIPLY     [reduce using rule 43 (MethodCall)]
    T_DIVIDE       reduce using rule 38 (Assignment)
    T_DIVIDE       [reduce using rule 43 (MethodCall)]
    T_LSS          reduce using rule 38 (Assignment)
    T_LSS          [reduce using rule 43 (MethodCall)]
    T_LEQ          reduce using rule 38 (Assignment)
    T_LEQ          [reduce using rule 43 (MethodCall)]
    T_EQUIVALENCE  reduce using rule 38 (Assignment)
    T_EQUIVALENCE  [reduce using rule 43 (MethodCall)]
    T_AND          reduce using rule 38 (Assignment)
    T_AND          [reduce using rule 43 (MethodCall)]
    T_OR           reduce using rule 38 (Assignment)
    T_OR           [reduce using rule 43 (MethodCall)]
    T_NOT          reduce using rule 38 (Assignment)
    T_NOT          [reduce using rule 43 (MethodCall)]
    T_ID           [reduce using rule 38 (Assignment)]
    T_ID           [reduce using rule 43 (MethodCall)]
    T_OPENPAREN    reduce using rule 38 (Assignment)
    T_OPENPAREN    [reduce using rule 43 (MethodCall)]
    T_NUMBER       reduce using rule 38 (Assignment)
    T_NUMBER       [reduce using rule 43 (MethodCall)]
    T_TRUE         reduce using rule 38 (Assignment)
    T_TRUE         [reduce using rule 43 (MethodCall)]
    T_FALSE        reduce using rule 38 (Assignment)
    T_FALSE        [reduce using rule 43 (MethodCall)]
    T_SEMICOLON    reduce using rule 38 (Assignment)
    T_SEMICOLON    [reduce using rule 43 (MethodCall)]
    T_NEW          reduce using rule 38 (Assignment)
    T_NEW          [reduce using rule 43 (MethodCall)]
    $default       reduce using rule 38 (Assignment)

    Statement    go to state 144
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Type         go to state 87


State 141

   51 RepeatUntil: T_REPEAT T_OPEN_BRACKET T_CLOSE_BRACKET T_UNTIL . T_OPENPAREN Exp T_SEMICOLON

    T_OPENPAREN  shift, and go to state 156


State 142

   54 Block: Statement Exp . T_SEMICOLON
   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_PLUS         shift, and go to state 100
    T_MINUS        shift, and go to state 101
    T_MULTIPLY     shift, and go to state 102
    T_DIVIDE       shift, and go to state 103
    T_LSS          shift, and go to state 104
    T_LEQ          shift, and go to state 105
    T_EQUIVALENCE  shift, and go to state 106
    T_AND          shift, and go to state 107
    T_OR           shift, and go to state 108
    T_SEMICOLON    shift, and go to state 157


State 143

   50 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block T_CLOSE_BRACKET . T_UNTIL T_OPENPAREN Exp T_SEMICOLON

    T_UNTIL  shift, and go to state 158


State 144

   53 Block: Block Statement . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 159


State 145

   55 ReturnStatement: T_RETURN Exp . T_SEMICOLON
   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_PLUS         shift, and go to state 100
    T_MINUS        shift, and go to state 101
    T_MULTIPLY     shift, and go to state 102
    T_DIVIDE       shift, and go to state 103
    T_LSS          shift, and go to state 104
    T_LEQ          shift, and go to state 105
    T_EQUIVALENCE  shift, and go to state 106
    T_AND          shift, and go to state 107
    T_OR           shift, and go to state 108
    T_SEMICOLON    shift, and go to state 160


State 146

   25 Declaration: Declaration Type T_ID T_SEMICOLON .

    $default  reduce using rule 25 (Declaration)


State 147

   36 Assignment: Type T_ASSIGN Exp T_SEMICOLON .

    $default  reduce using rule 36 (Assignment)


State 148

   39 MethodCall: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON .

    $default  reduce using rule 39 (MethodCall)


State 149

   42 MethodCall: T_ID T_DOT T_ID T_OPENPAREN T_CLOSEPAREN . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 161


State 150

   15 Parameters: Parameters . T_COMMA Parameter
   41 MethodCall: T_ID T_DOT T_ID T_OPENPAREN Parameters . T_CLOSEPAREN T_SEMICOLON

    T_CLOSEPAREN  shift, and go to state 162
    T_COMMA       shift, and go to state 40


State 151

   37 Assignment: T_ID T_DOT T_ID T_ASSIGN Exp . T_SEMICOLON
   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_PLUS         shift, and go to state 100
    T_MINUS        shift, and go to state 101
    T_MULTIPLY     shift, and go to state 102
    T_DIVIDE       shift, and go to state 103
    T_LSS          shift, and go to state 104
    T_LEQ          shift, and go to state 105
    T_EQUIVALENCE  shift, and go to state 106
    T_AND          shift, and go to state 107
    T_OR           shift, and go to state 108
    T_SEMICOLON    shift, and go to state 163


State 152

   15 Parameters: Parameters . T_COMMA Parameter
   81 Exp: T_NEW T_ID T_OPENPAREN Parameters . T_CLOSEPAREN

    T_CLOSEPAREN  shift, and go to state 164
    T_COMMA       shift, and go to state 40


State 153

   47 IfElse: T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET T_ELSE . T_OPEN_BRACKET T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 165


State 154

   44 IfElse: T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET .
   46       | T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET . T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET

    T_ELSE  shift, and go to state 166

    $default  reduce using rule 44 (IfElse)


State 155

   48 While: T_WHILE Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET .

    $default  reduce using rule 48 (While)


State 156

   51 RepeatUntil: T_REPEAT T_OPEN_BRACKET T_CLOSE_BRACKET T_UNTIL T_OPENPAREN . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 167


State 157

   54 Block: Statement Exp T_SEMICOLON .

    $default  reduce using rule 54 (Block)


State 158

   50 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block T_CLOSE_BRACKET T_UNTIL . T_OPENPAREN Exp T_SEMICOLON

    T_OPENPAREN  shift, and go to state 168


State 159

   53 Block: Block Statement Exp . T_SEMICOLON
   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_PLUS         shift, and go to state 100
    T_MINUS        shift, and go to state 101
    T_MULTIPLY     shift, and go to state 102
    T_DIVIDE       shift, and go to state 103
    T_LSS          shift, and go to state 104
    T_LEQ          shift, and go to state 105
    T_EQUIVALENCE  shift, and go to state 106
    T_AND          shift, and go to state 107
    T_OR           shift, and go to state 108
    T_SEMICOLON    shift, and go to state 169


State 160

   55 ReturnStatement: T_RETURN Exp T_SEMICOLON .

    $default  reduce using rule 55 (ReturnStatement)


State 161

   42 MethodCall: T_ID T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON .

    $default  reduce using rule 42 (MethodCall)


State 162

   41 MethodCall: T_ID T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 170


State 163

   37 Assignment: T_ID T_DOT T_ID T_ASSIGN Exp T_SEMICOLON .

    $default  reduce using rule 37 (Assignment)


State 164

   81 Exp: T_NEW T_ID T_OPENPAREN Parameters T_CLOSEPAREN .

    $default  reduce using rule 81 (Exp)


State 165

   47 IfElse: T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 171


State 166

   46 IfElse: T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE . T_OPEN_BRACKET Block T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 172


State 167

   51 RepeatUntil: T_REPEAT T_OPEN_BRACKET T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp . T_SEMICOLON
   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_PLUS         shift, and go to state 100
    T_MINUS        shift, and go to state 101
    T_MULTIPLY     shift, and go to state 102
    T_DIVIDE       shift, and go to state 103
    T_LSS          shift, and go to state 104
    T_LEQ          shift, and go to state 105
    T_EQUIVALENCE  shift, and go to state 106
    T_AND          shift, and go to state 107
    T_OR           shift, and go to state 108
    T_SEMICOLON    shift, and go to state 173


State 168

   50 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block T_CLOSE_BRACKET T_UNTIL T_OPENPAREN . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 70
    T_NOT        shift, and go to state 71
    T_ID         shift, and go to state 72
    T_OPENPAREN  shift, and go to state 73
    T_NUMBER     shift, and go to state 74
    T_TRUE       shift, and go to state 75
    T_FALSE      shift, and go to state 76
    T_NEW        shift, and go to state 77

    T_MINUS   [reduce using rule 43 (MethodCall)]
    $default  reduce using rule 43 (MethodCall)

    MethodCall  go to state 78
    Exp         go to state 174


State 169

   53 Block: Block Statement Exp T_SEMICOLON .

    $default  reduce using rule 53 (Block)


State 170

   41 MethodCall: T_ID T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON .

    $default  reduce using rule 41 (MethodCall)


State 171

   47 IfElse: T_IF Exp T_OPEN_BRACKET T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 47 (IfElse)


State 172

   46 IfElse: T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET . Block T_CLOSE_BRACKET

    T_ID       shift, and go to state 50
    T_INTEGER  shift, and go to state 11
    T_PRINT    shift, and go to state 52
    T_IF       shift, and go to state 53
    T_WHILE    shift, and go to state 54
    T_BOOL     shift, and go to state 12
    T_REPEAT   shift, and go to state 55

    T_PLUS         reduce using rule 38 (Assignment)
    T_PLUS         [reduce using rule 43 (MethodCall)]
    T_MINUS        reduce using rule 38 (Assignment)
    T_MINUS        [reduce using rule 43 (MethodCall)]
    T_MULTIPLY     reduce using rule 38 (Assignment)
    T_MULTIPLY     [reduce using rule 43 (MethodCall)]
    T_DIVIDE       reduce using rule 38 (Assignment)
    T_DIVIDE       [reduce using rule 43 (MethodCall)]
    T_LSS          reduce using rule 38 (Assignment)
    T_LSS          [reduce using rule 43 (MethodCall)]
    T_LEQ          reduce using rule 38 (Assignment)
    T_LEQ          [reduce using rule 43 (MethodCall)]
    T_EQUIVALENCE  reduce using rule 38 (Assignment)
    T_EQUIVALENCE  [reduce using rule 43 (MethodCall)]
    T_AND          reduce using rule 38 (Assignment)
    T_AND          [reduce using rule 43 (MethodCall)]
    T_OR           reduce using rule 38 (Assignment)
    T_OR           [reduce using rule 43 (MethodCall)]
    T_NOT          reduce using rule 38 (Assignment)
    T_NOT          [reduce using rule 43 (MethodCall)]
    T_ID           [reduce using rule 38 (Assignment)]
    T_ID           [reduce using rule 43 (MethodCall)]
    T_OPENPAREN    reduce using rule 38 (Assignment)
    T_OPENPAREN    [reduce using rule 43 (MethodCall)]
    T_NUMBER       reduce using rule 38 (Assignment)
    T_NUMBER       [reduce using rule 43 (MethodCall)]
    T_TRUE         reduce using rule 38 (Assignment)
    T_TRUE         [reduce using rule 43 (MethodCall)]
    T_FALSE        reduce using rule 38 (Assignment)
    T_FALSE        [reduce using rule 43 (MethodCall)]
    T_SEMICOLON    reduce using rule 38 (Assignment)
    T_SEMICOLON    [reduce using rule 43 (MethodCall)]
    T_NEW          reduce using rule 38 (Assignment)
    T_NEW          [reduce using rule 43 (MethodCall)]
    $default       reduce using rule 38 (Assignment)

    Statement    go to state 113
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Block        go to state 175
    Type         go to state 87


State 173

   51 RepeatUntil: T_REPEAT T_OPEN_BRACKET T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON .

    $default  reduce using rule 51 (RepeatUntil)


State 174

   50 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp . T_SEMICOLON
   62 Exp: Exp . T_PLUS Exp
   63    | Exp . T_MINUS Exp
   64    | Exp . T_MULTIPLY Exp
   65    | Exp . T_DIVIDE Exp
   66    | Exp . T_LSS Exp
   67    | Exp . T_LEQ Exp
   68    | Exp . T_EQUIVALENCE Exp
   69    | Exp . T_AND Exp
   70    | Exp . T_OR Exp

    T_PLUS         shift, and go to state 100
    T_MINUS        shift, and go to state 101
    T_MULTIPLY     shift, and go to state 102
    T_DIVIDE       shift, and go to state 103
    T_LSS          shift, and go to state 104
    T_LEQ          shift, and go to state 105
    T_EQUIVALENCE  shift, and go to state 106
    T_AND          shift, and go to state 107
    T_OR           shift, and go to state 108
    T_SEMICOLON    shift, and go to state 176


State 175

   46 IfElse: T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block . T_CLOSE_BRACKET
   53 Block: Block . Statement Exp T_SEMICOLON

    T_ID             shift, and go to state 50
    T_CLOSE_BRACKET  shift, and go to state 177
    T_INTEGER        shift, and go to state 11
    T_PRINT          shift, and go to state 52
    T_IF             shift, and go to state 53
    T_WHILE          shift, and go to state 54
    T_BOOL           shift, and go to state 12
    T_REPEAT         shift, and go to state 55

    T_PLUS         reduce using rule 38 (Assignment)
    T_PLUS         [reduce using rule 43 (MethodCall)]
    T_MINUS        reduce using rule 38 (Assignment)
    T_MINUS        [reduce using rule 43 (MethodCall)]
    T_MULTIPLY     reduce using rule 38 (Assignment)
    T_MULTIPLY     [reduce using rule 43 (MethodCall)]
    T_DIVIDE       reduce using rule 38 (Assignment)
    T_DIVIDE       [reduce using rule 43 (MethodCall)]
    T_LSS          reduce using rule 38 (Assignment)
    T_LSS          [reduce using rule 43 (MethodCall)]
    T_LEQ          reduce using rule 38 (Assignment)
    T_LEQ          [reduce using rule 43 (MethodCall)]
    T_EQUIVALENCE  reduce using rule 38 (Assignment)
    T_EQUIVALENCE  [reduce using rule 43 (MethodCall)]
    T_AND          reduce using rule 38 (Assignment)
    T_AND          [reduce using rule 43 (MethodCall)]
    T_OR           reduce using rule 38 (Assignment)
    T_OR           [reduce using rule 43 (MethodCall)]
    T_NOT          reduce using rule 38 (Assignment)
    T_NOT          [reduce using rule 43 (MethodCall)]
    T_ID           [reduce using rule 38 (Assignment)]
    T_ID           [reduce using rule 43 (MethodCall)]
    T_OPENPAREN    reduce using rule 38 (Assignment)
    T_OPENPAREN    [reduce using rule 43 (MethodCall)]
    T_NUMBER       reduce using rule 38 (Assignment)
    T_NUMBER       [reduce using rule 43 (MethodCall)]
    T_TRUE         reduce using rule 38 (Assignment)
    T_TRUE         [reduce using rule 43 (MethodCall)]
    T_FALSE        reduce using rule 38 (Assignment)
    T_FALSE        [reduce using rule 43 (MethodCall)]
    T_SEMICOLON    reduce using rule 38 (Assignment)
    T_SEMICOLON    [reduce using rule 43 (MethodCall)]
    T_NEW          reduce using rule 38 (Assignment)
    T_NEW          [reduce using rule 43 (MethodCall)]
    $default       reduce using rule 38 (Assignment)

    Statement    go to state 144
    Assignment   go to state 60
    MethodCall   go to state 61
    IfElse       go to state 62
    While        go to state 63
    RepeatUntil  go to state 64
    Print        go to state 65
    Type         go to state 87


State 176

   50 RepeatUntil: T_REPEAT T_OPEN_BRACKET Block T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_SEMICOLON .

    $default  reduce using rule 50 (RepeatUntil)


State 177

   46 IfElse: T_IF Exp T_OPEN_BRACKET Block T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET Block T_CLOSE_BRACKET .

    $default  reduce using rule 46 (IfElse)
