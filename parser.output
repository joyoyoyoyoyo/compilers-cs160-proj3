Terminals unused in grammar

   T_NEWLN
   T_EOF
   T_FOR


State 5 conflicts: 1 shift/reduce
State 21 conflicts: 1 shift/reduce
State 45 conflicts: 1 shift/reduce
State 49 conflicts: 5 shift/reduce
State 50 conflicts: 1 shift/reduce


Grammar

    0 $accept: Start $end

    1 Start: ClassNames

    2 ClassNames: ClassNames ClassName
    3           | ClassName

    4 ClassName: T_ID T_OPEN_BRACKET T_CLOSE_BRACKET
    5          | T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET
    6          | T_ID T_EXTENDS T_ID T_OPEN_BRACKET T_CLOSE_BRACKET
    7          | T_ID T_EXTENDS T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET

    8 Type: T_INTEGER
    9     | T_BOOL
   10     | T_ID

   11 ReturnType: Type
   12           | T_NONE

   13 InnerScopeClass: ClassMembers ClassMethods

   14 ClassMembers: ClassMembers ClassMember
   15             | %empty

   16 ClassMember: Type T_ID T_SEMICOLON

   17 ClassMethods: MethodName ClassMethods
   18             | %empty

   19 Parameters: Parameters T_COMMA Parameter
   20           | Parameter

   21 Parameter: T_ID T_COLON Type

   22 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   23           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET
   24           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   25           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

   26 InnerScopeMethod: Declarations Statements ReturnStatement

   27 Declarations: Declarations Declaration
   28             | %empty

   29 Declaration: Type IdentifierList T_SEMICOLON

   30 IdentifierList: IdentifierList T_COMMA T_ID
   31               | T_ID

   32 Statements: Statements Statement
   33           | Statement
   34           | %empty

   35 Statement: Assignment
   36          | MethodCall
   37          | IfElse
   38          | While
   39          | RepeatUntil
   40          | Print

   41 ReturnStatement: T_RETURN Exp T_SEMICOLON
   42                | %empty

   43 Assignment: T_ID T_ASSIGN Exp T_SEMICOLON
   44           | T_ID T_DOT T_ID T_ASSIGN Exp T_SEMICOLON

   45 Exp: Arithmetic
   46    | Exp T_LSS Exp
   47    | Exp T_LEQ Exp
   48    | Exp T_EQUIVALENCE Exp
   49    | Exp T_AND Exp
   50    | Exp T_OR Exp
   51    | T_NOT Exp
   52    | T_MINUS Exp
   53    | T_ID
   54    | T_ID T_DOT T_ID
   55    | MethodCall
   56    | T_OPENPAREN Exp T_CLOSEPAREN
   57    | T_NUMBER
   58    | T_TRUE
   59    | T_FALSE
   60    | T_NEW T_ID
   61    | T_NEW T_ID T_OPENPAREN ArgumentList T_CLOSEPAREN

   62 ArgumentList: ArgumentList T_COMMA Exp
   63             | Exp

   64 Arithmetic: Exp T_PLUS Exp
   65           | Exp T_MINUS Exp
   66           | Exp T_MULTIPLY Exp
   67           | Exp T_DIVIDE Exp

   68 MethodCall: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   69           | T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   70           | T_ID T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   71           | T_ID T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

   72 IfElse: T_IF Exp T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET
   73       | T_IF Exp T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET

   74 While: T_WHILE Exp T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET

   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_CLOSEPAREN T_SEMICOLON

   76 Print: T_PRINT Exp T_SEMICOLON

   77 NotEmptyStment: NotEmptyStment Statement
   78               | Statement


Terminals, with rules where they appear

$end (0) 0
error (256)
T_PLUS (258) 64
T_MINUS (259) 52 65
T_MULTIPLY (260) 66
T_DIVIDE (261) 67
T_LSS (262) 46
T_LEQ (263) 47
T_EQUIVALENCE (264) 48
T_AND (265) 49
T_OR (266) 50
T_NOT (267) 51
T_ASSIGN (268) 43 44
T_ID (269) 4 5 6 7 10 16 21 22 23 24 25 30 31 43 44 53 54 60 61 68
    69 70 71
T_OPENPAREN (270) 22 23 24 25 56 61 68 69 70 71 75
T_CLOSEPAREN (271) 22 23 24 25 56 61 68 69 70 71 75
T_OPEN_BRACKET (272) 4 5 6 7 22 23 24 25 72 73 74 75
T_CLOSE_BRACKET (273) 4 5 6 7 22 23 24 25 72 73 74 75
T_INTEGER (274) 8
T_NUMBER (275) 57
T_TRUE (276) 58
T_FALSE (277) 59
T_SEMICOLON (278) 16 29 41 43 44 68 69 70 71 75 76
T_NEWLN (279)
T_EOF (280)
T_NONE (281) 12
T_PRINT (282) 76
T_RETURN (283) 41
T_IF (284) 72 73
T_ELSE (285) 73
T_WHILE (286) 74
T_NEW (287) 60 61
T_BOOL (288) 9
T_EXTENDS (289) 6 7
T_REPEAT (290) 75
T_UNTIL (291) 75
T_FOR (292)
T_DOT (293) 44 54 70 71
T_COMMA (294) 19 30 62
T_UNARY (295)
T_LAMBDA (296) 22 23 24 25
T_COLON (297) 21


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
Start (44)
    on left: 1, on right: 0
ClassNames (45)
    on left: 2 3, on right: 1 2
ClassName (46)
    on left: 4 5 6 7, on right: 2 3
Type (47)
    on left: 8 9 10, on right: 11 16 21 29
ReturnType (48)
    on left: 11 12, on right: 22 23 24 25
InnerScopeClass (49)
    on left: 13, on right: 5 7
ClassMembers (50)
    on left: 14 15, on right: 13 14
ClassMember (51)
    on left: 16, on right: 14
ClassMethods (52)
    on left: 17 18, on right: 13 17
Parameters (53)
    on left: 19 20, on right: 19 22 23 68 70
Parameter (54)
    on left: 21, on right: 19 20
MethodName (55)
    on left: 22 23 24 25, on right: 17
InnerScopeMethod (56)
    on left: 26, on right: 22 24
Declarations (57)
    on left: 27 28, on right: 26 27
Declaration (58)
    on left: 29, on right: 27
IdentifierList (59)
    on left: 30 31, on right: 29 30
Statements (60)
    on left: 32 33 34, on right: 26 32
Statement (61)
    on left: 35 36 37 38 39 40, on right: 32 33 77 78
ReturnStatement (62)
    on left: 41 42, on right: 26
Assignment (63)
    on left: 43 44, on right: 35
Exp (64)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61, on right:
    41 43 44 46 47 48 49 50 51 52 56 62 63 64 65 66 67 72 73 74 75
    76
ArgumentList (65)
    on left: 62 63, on right: 61 62
Arithmetic (66)
    on left: 64 65 66 67, on right: 45
MethodCall (67)
    on left: 68 69 70 71, on right: 36 55
IfElse (68)
    on left: 72 73, on right: 37
While (69)
    on left: 74, on right: 38
RepeatUntil (70)
    on left: 75, on right: 39
Print (71)
    on left: 76, on right: 40
NotEmptyStment (72)
    on left: 77 78, on right: 72 73 74 75 77


State 0

    0 $accept: . Start $end

    T_ID  shift, and go to state 1

    Start       go to state 2
    ClassNames  go to state 3
    ClassName   go to state 4


State 1

    4 ClassName: T_ID . T_OPEN_BRACKET T_CLOSE_BRACKET
    5          | T_ID . T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET
    6          | T_ID . T_EXTENDS T_ID T_OPEN_BRACKET T_CLOSE_BRACKET
    7          | T_ID . T_EXTENDS T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 5
    T_EXTENDS       shift, and go to state 6


State 2

    0 $accept: Start . $end

    $end  shift, and go to state 7


State 3

    1 Start: ClassNames .
    2 ClassNames: ClassNames . ClassName

    T_ID  shift, and go to state 1

    $default  reduce using rule 1 (Start)

    ClassName  go to state 8


State 4

    3 ClassNames: ClassName .

    $default  reduce using rule 3 (ClassNames)


State 5

    4 ClassName: T_ID T_OPEN_BRACKET . T_CLOSE_BRACKET
    5          | T_ID T_OPEN_BRACKET . InnerScopeClass T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 9

    T_CLOSE_BRACKET  [reduce using rule 15 (ClassMembers)]
    $default         reduce using rule 15 (ClassMembers)

    InnerScopeClass  go to state 10
    ClassMembers     go to state 11


State 6

    6 ClassName: T_ID T_EXTENDS . T_ID T_OPEN_BRACKET T_CLOSE_BRACKET
    7          | T_ID T_EXTENDS . T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET

    T_ID  shift, and go to state 12


State 7

    0 $accept: Start $end .

    $default  accept


State 8

    2 ClassNames: ClassNames ClassName .

    $default  reduce using rule 2 (ClassNames)


State 9

    4 ClassName: T_ID T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 4 (ClassName)


State 10

    5 ClassName: T_ID T_OPEN_BRACKET InnerScopeClass . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 13


State 11

   13 InnerScopeClass: ClassMembers . ClassMethods
   14 ClassMembers: ClassMembers . ClassMember

    T_ID       shift, and go to state 14
    T_INTEGER  shift, and go to state 15
    T_BOOL     shift, and go to state 16

    $default  reduce using rule 18 (ClassMethods)

    Type          go to state 17
    ClassMember   go to state 18
    ClassMethods  go to state 19
    MethodName    go to state 20


State 12

    6 ClassName: T_ID T_EXTENDS T_ID . T_OPEN_BRACKET T_CLOSE_BRACKET
    7          | T_ID T_EXTENDS T_ID . T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 21


State 13

    5 ClassName: T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET .

    $default  reduce using rule 5 (ClassName)


State 14

   10 Type: T_ID .
   22 MethodName: T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   23           | T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET
   24           | T_ID . T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   25           | T_ID . T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_OPENPAREN  shift, and go to state 22

    $default  reduce using rule 10 (Type)


State 15

    8 Type: T_INTEGER .

    $default  reduce using rule 8 (Type)


State 16

    9 Type: T_BOOL .

    $default  reduce using rule 9 (Type)


State 17

   16 ClassMember: Type . T_ID T_SEMICOLON

    T_ID  shift, and go to state 23


State 18

   14 ClassMembers: ClassMembers ClassMember .

    $default  reduce using rule 14 (ClassMembers)


State 19

   13 InnerScopeClass: ClassMembers ClassMethods .

    $default  reduce using rule 13 (InnerScopeClass)


State 20

   17 ClassMethods: MethodName . ClassMethods

    T_ID  shift, and go to state 24

    $default  reduce using rule 18 (ClassMethods)

    ClassMethods  go to state 25
    MethodName    go to state 20


State 21

    6 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET . T_CLOSE_BRACKET
    7          | T_ID T_EXTENDS T_ID T_OPEN_BRACKET . InnerScopeClass T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 26

    T_CLOSE_BRACKET  [reduce using rule 15 (ClassMembers)]
    $default         reduce using rule 15 (ClassMembers)

    InnerScopeClass  go to state 27
    ClassMembers     go to state 11


State 22

   22 MethodName: T_ID T_OPENPAREN . Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   23           | T_ID T_OPENPAREN . Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET
   24           | T_ID T_OPENPAREN . T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   25           | T_ID T_OPENPAREN . T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_ID          shift, and go to state 28
    T_CLOSEPAREN  shift, and go to state 29

    Parameters  go to state 30
    Parameter   go to state 31


State 23

   16 ClassMember: Type T_ID . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 32


State 24

   22 MethodName: T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   23           | T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET
   24           | T_ID . T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   25           | T_ID . T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_OPENPAREN  shift, and go to state 22


State 25

   17 ClassMethods: MethodName ClassMethods .

    $default  reduce using rule 17 (ClassMethods)


State 26

    6 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 6 (ClassName)


State 27

    7 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET InnerScopeClass . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 33


State 28

   21 Parameter: T_ID . T_COLON Type

    T_COLON  shift, and go to state 34


State 29

   24 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN . T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   25           | T_ID T_OPENPAREN T_CLOSEPAREN . T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_LAMBDA  shift, and go to state 35


State 30

   19 Parameters: Parameters . T_COMMA Parameter
   22 MethodName: T_ID T_OPENPAREN Parameters . T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   23           | T_ID T_OPENPAREN Parameters . T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_CLOSEPAREN  shift, and go to state 36
    T_COMMA       shift, and go to state 37


State 31

   20 Parameters: Parameter .

    $default  reduce using rule 20 (Parameters)


State 32

   16 ClassMember: Type T_ID T_SEMICOLON .

    $default  reduce using rule 16 (ClassMember)


State 33

    7 ClassName: T_ID T_EXTENDS T_ID T_OPEN_BRACKET InnerScopeClass T_CLOSE_BRACKET .

    $default  reduce using rule 7 (ClassName)


State 34

   21 Parameter: T_ID T_COLON . Type

    T_ID       shift, and go to state 38
    T_INTEGER  shift, and go to state 15
    T_BOOL     shift, and go to state 16

    Type  go to state 39


State 35

   24 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA . ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   25           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA . ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_ID       shift, and go to state 38
    T_INTEGER  shift, and go to state 15
    T_NONE     shift, and go to state 40
    T_BOOL     shift, and go to state 16

    Type        go to state 41
    ReturnType  go to state 42


State 36

   22 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN . T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   23           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN . T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_LAMBDA  shift, and go to state 43


State 37

   19 Parameters: Parameters T_COMMA . Parameter

    T_ID  shift, and go to state 28

    Parameter  go to state 44


State 38

   10 Type: T_ID .

    $default  reduce using rule 10 (Type)


State 39

   21 Parameter: T_ID T_COLON Type .

    $default  reduce using rule 21 (Parameter)


State 40

   12 ReturnType: T_NONE .

    $default  reduce using rule 12 (ReturnType)


State 41

   11 ReturnType: Type .

    $default  reduce using rule 11 (ReturnType)


State 42

   24 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType . T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   25           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType . T_OPEN_BRACKET T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 45


State 43

   22 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA . ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   23           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA . ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET

    T_ID       shift, and go to state 38
    T_INTEGER  shift, and go to state 15
    T_NONE     shift, and go to state 40
    T_BOOL     shift, and go to state 16

    Type        go to state 41
    ReturnType  go to state 46


State 44

   19 Parameters: Parameters T_COMMA Parameter .

    $default  reduce using rule 19 (Parameters)


State 45

   24 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET . InnerScopeMethod T_CLOSE_BRACKET
   25           | T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 47

    T_CLOSE_BRACKET  [reduce using rule 28 (Declarations)]
    $default         reduce using rule 28 (Declarations)

    InnerScopeMethod  go to state 48
    Declarations      go to state 49


State 46

   22 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType . T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET
   23           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType . T_OPEN_BRACKET T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 50


State 47

   25 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 25 (MethodName)


State 48

   24 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 51


State 49

   26 InnerScopeMethod: Declarations . Statements ReturnStatement
   27 Declarations: Declarations . Declaration

    T_ID       shift, and go to state 52
    T_INTEGER  shift, and go to state 15
    T_PRINT    shift, and go to state 53
    T_IF       shift, and go to state 54
    T_WHILE    shift, and go to state 55
    T_BOOL     shift, and go to state 16
    T_REPEAT   shift, and go to state 56

    T_ID      [reduce using rule 34 (Statements)]
    T_PRINT   [reduce using rule 34 (Statements)]
    T_IF      [reduce using rule 34 (Statements)]
    T_WHILE   [reduce using rule 34 (Statements)]
    T_REPEAT  [reduce using rule 34 (Statements)]
    $default  reduce using rule 34 (Statements)

    Type         go to state 57
    Declaration  go to state 58
    Statements   go to state 59
    Statement    go to state 60
    Assignment   go to state 61
    MethodCall   go to state 62
    IfElse       go to state 63
    While        go to state 64
    RepeatUntil  go to state 65
    Print        go to state 66


State 50

   22 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET . InnerScopeMethod T_CLOSE_BRACKET
   23           | T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 67

    T_CLOSE_BRACKET  [reduce using rule 28 (Declarations)]
    $default         reduce using rule 28 (Declarations)

    InnerScopeMethod  go to state 68
    Declarations      go to state 49


State 51

   24 MethodName: T_ID T_OPENPAREN T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET .

    $default  reduce using rule 24 (MethodName)


State 52

   10 Type: T_ID .
   43 Assignment: T_ID . T_ASSIGN Exp T_SEMICOLON
   44           | T_ID . T_DOT T_ID T_ASSIGN Exp T_SEMICOLON
   68 MethodCall: T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   69           | T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   70           | T_ID . T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   71           | T_ID . T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_ASSIGN     shift, and go to state 69
    T_OPENPAREN  shift, and go to state 70
    T_DOT        shift, and go to state 71

    $default  reduce using rule 10 (Type)


State 53

   76 Print: T_PRINT . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 80
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 54

   72 IfElse: T_IF . Exp T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET
   73       | T_IF . Exp T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 83
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 55

   74 While: T_WHILE . Exp T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 84
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 56

   75 RepeatUntil: T_REPEAT . T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_CLOSEPAREN T_SEMICOLON

    T_OPEN_BRACKET  shift, and go to state 85


State 57

   29 Declaration: Type . IdentifierList T_SEMICOLON

    T_ID  shift, and go to state 86

    IdentifierList  go to state 87


State 58

   27 Declarations: Declarations Declaration .

    $default  reduce using rule 27 (Declarations)


State 59

   26 InnerScopeMethod: Declarations Statements . ReturnStatement
   32 Statements: Statements . Statement

    T_ID      shift, and go to state 88
    T_PRINT   shift, and go to state 53
    T_RETURN  shift, and go to state 89
    T_IF      shift, and go to state 54
    T_WHILE   shift, and go to state 55
    T_REPEAT  shift, and go to state 56

    $default  reduce using rule 42 (ReturnStatement)

    Statement        go to state 90
    ReturnStatement  go to state 91
    Assignment       go to state 61
    MethodCall       go to state 62
    IfElse           go to state 63
    While            go to state 64
    RepeatUntil      go to state 65
    Print            go to state 66


State 60

   33 Statements: Statement .

    $default  reduce using rule 33 (Statements)


State 61

   35 Statement: Assignment .

    $default  reduce using rule 35 (Statement)


State 62

   36 Statement: MethodCall .

    $default  reduce using rule 36 (Statement)


State 63

   37 Statement: IfElse .

    $default  reduce using rule 37 (Statement)


State 64

   38 Statement: While .

    $default  reduce using rule 38 (Statement)


State 65

   39 Statement: RepeatUntil .

    $default  reduce using rule 39 (Statement)


State 66

   40 Statement: Print .

    $default  reduce using rule 40 (Statement)


State 67

   23 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET T_CLOSE_BRACKET .

    $default  reduce using rule 23 (MethodName)


State 68

   22 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 92


State 69

   43 Assignment: T_ID T_ASSIGN . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 93
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 70

   68 MethodCall: T_ID T_OPENPAREN . Parameters T_CLOSEPAREN T_SEMICOLON
   69           | T_ID T_OPENPAREN . T_CLOSEPAREN T_SEMICOLON

    T_ID          shift, and go to state 28
    T_CLOSEPAREN  shift, and go to state 94

    Parameters  go to state 95
    Parameter   go to state 31


State 71

   44 Assignment: T_ID T_DOT . T_ID T_ASSIGN Exp T_SEMICOLON
   70 MethodCall: T_ID T_DOT . T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   71           | T_ID T_DOT . T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_ID  shift, and go to state 96


State 72

   52 Exp: T_MINUS . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 97
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 73

   51 Exp: T_NOT . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 98
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 74

   53 Exp: T_ID .
   54    | T_ID . T_DOT T_ID
   68 MethodCall: T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   69           | T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   70           | T_ID . T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   71           | T_ID . T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_OPENPAREN  shift, and go to state 70
    T_DOT        shift, and go to state 99

    $default  reduce using rule 53 (Exp)


State 75

   56 Exp: T_OPENPAREN . Exp T_CLOSEPAREN

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 100
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 76

   57 Exp: T_NUMBER .

    $default  reduce using rule 57 (Exp)


State 77

   58 Exp: T_TRUE .

    $default  reduce using rule 58 (Exp)


State 78

   59 Exp: T_FALSE .

    $default  reduce using rule 59 (Exp)


State 79

   60 Exp: T_NEW . T_ID
   61    | T_NEW . T_ID T_OPENPAREN ArgumentList T_CLOSEPAREN

    T_ID  shift, and go to state 101


State 80

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp
   76 Print: T_PRINT Exp . T_SEMICOLON

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_SEMICOLON    shift, and go to state 111


State 81

   45 Exp: Arithmetic .

    $default  reduce using rule 45 (Exp)


State 82

   55 Exp: MethodCall .

    $default  reduce using rule 55 (Exp)


State 83

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp
   72 IfElse: T_IF Exp . T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET
   73       | T_IF Exp . T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET

    T_PLUS          shift, and go to state 102
    T_MINUS         shift, and go to state 103
    T_MULTIPLY      shift, and go to state 104
    T_DIVIDE        shift, and go to state 105
    T_LSS           shift, and go to state 106
    T_LEQ           shift, and go to state 107
    T_EQUIVALENCE   shift, and go to state 108
    T_AND           shift, and go to state 109
    T_OR            shift, and go to state 110
    T_OPEN_BRACKET  shift, and go to state 112


State 84

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp
   74 While: T_WHILE Exp . T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET

    T_PLUS          shift, and go to state 102
    T_MINUS         shift, and go to state 103
    T_MULTIPLY      shift, and go to state 104
    T_DIVIDE        shift, and go to state 105
    T_LSS           shift, and go to state 106
    T_LEQ           shift, and go to state 107
    T_EQUIVALENCE   shift, and go to state 108
    T_AND           shift, and go to state 109
    T_OR            shift, and go to state 110
    T_OPEN_BRACKET  shift, and go to state 113


State 85

   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET . NotEmptyStment T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_CLOSEPAREN T_SEMICOLON

    T_ID      shift, and go to state 88
    T_PRINT   shift, and go to state 53
    T_IF      shift, and go to state 54
    T_WHILE   shift, and go to state 55
    T_REPEAT  shift, and go to state 56

    Statement       go to state 114
    Assignment      go to state 61
    MethodCall      go to state 62
    IfElse          go to state 63
    While           go to state 64
    RepeatUntil     go to state 65
    Print           go to state 66
    NotEmptyStment  go to state 115


State 86

   31 IdentifierList: T_ID .

    $default  reduce using rule 31 (IdentifierList)


State 87

   29 Declaration: Type IdentifierList . T_SEMICOLON
   30 IdentifierList: IdentifierList . T_COMMA T_ID

    T_SEMICOLON  shift, and go to state 116
    T_COMMA      shift, and go to state 117


State 88

   43 Assignment: T_ID . T_ASSIGN Exp T_SEMICOLON
   44           | T_ID . T_DOT T_ID T_ASSIGN Exp T_SEMICOLON
   68 MethodCall: T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   69           | T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON
   70           | T_ID . T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   71           | T_ID . T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_ASSIGN     shift, and go to state 69
    T_OPENPAREN  shift, and go to state 70
    T_DOT        shift, and go to state 71


State 89

   41 ReturnStatement: T_RETURN . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 118
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 90

   32 Statements: Statements Statement .

    $default  reduce using rule 32 (Statements)


State 91

   26 InnerScopeMethod: Declarations Statements ReturnStatement .

    $default  reduce using rule 26 (InnerScopeMethod)


State 92

   22 MethodName: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_LAMBDA ReturnType T_OPEN_BRACKET InnerScopeMethod T_CLOSE_BRACKET .

    $default  reduce using rule 22 (MethodName)


State 93

   43 Assignment: T_ID T_ASSIGN Exp . T_SEMICOLON
   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_SEMICOLON    shift, and go to state 119


State 94

   69 MethodCall: T_ID T_OPENPAREN T_CLOSEPAREN . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 120


State 95

   19 Parameters: Parameters . T_COMMA Parameter
   68 MethodCall: T_ID T_OPENPAREN Parameters . T_CLOSEPAREN T_SEMICOLON

    T_CLOSEPAREN  shift, and go to state 121
    T_COMMA       shift, and go to state 37


State 96

   44 Assignment: T_ID T_DOT T_ID . T_ASSIGN Exp T_SEMICOLON
   70 MethodCall: T_ID T_DOT T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   71           | T_ID T_DOT T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_ASSIGN     shift, and go to state 122
    T_OPENPAREN  shift, and go to state 123


State 97

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   52    | T_MINUS Exp .
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    $default  reduce using rule 52 (Exp)


State 98

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   51    | T_NOT Exp .
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    $default  reduce using rule 51 (Exp)


State 99

   54 Exp: T_ID T_DOT . T_ID
   70 MethodCall: T_ID T_DOT . T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   71           | T_ID T_DOT . T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_ID  shift, and go to state 124


State 100

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   56    | T_OPENPAREN Exp . T_CLOSEPAREN
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_CLOSEPAREN   shift, and go to state 125


State 101

   60 Exp: T_NEW T_ID .
   61    | T_NEW T_ID . T_OPENPAREN ArgumentList T_CLOSEPAREN

    T_OPENPAREN  shift, and go to state 126

    $default  reduce using rule 60 (Exp)


State 102

   64 Arithmetic: Exp T_PLUS . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 127
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 103

   65 Arithmetic: Exp T_MINUS . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 128
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 104

   66 Arithmetic: Exp T_MULTIPLY . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 129
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 105

   67 Arithmetic: Exp T_DIVIDE . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 130
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 106

   46 Exp: Exp T_LSS . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 131
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 107

   47 Exp: Exp T_LEQ . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 132
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 108

   48 Exp: Exp T_EQUIVALENCE . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 133
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 109

   49 Exp: Exp T_AND . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 134
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 110

   50 Exp: Exp T_OR . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 135
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 111

   76 Print: T_PRINT Exp T_SEMICOLON .

    $default  reduce using rule 76 (Print)


State 112

   72 IfElse: T_IF Exp T_OPEN_BRACKET . NotEmptyStment T_CLOSE_BRACKET
   73       | T_IF Exp T_OPEN_BRACKET . NotEmptyStment T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET

    T_ID      shift, and go to state 88
    T_PRINT   shift, and go to state 53
    T_IF      shift, and go to state 54
    T_WHILE   shift, and go to state 55
    T_REPEAT  shift, and go to state 56

    Statement       go to state 114
    Assignment      go to state 61
    MethodCall      go to state 62
    IfElse          go to state 63
    While           go to state 64
    RepeatUntil     go to state 65
    Print           go to state 66
    NotEmptyStment  go to state 136


State 113

   74 While: T_WHILE Exp T_OPEN_BRACKET . NotEmptyStment T_CLOSE_BRACKET

    T_ID      shift, and go to state 88
    T_PRINT   shift, and go to state 53
    T_IF      shift, and go to state 54
    T_WHILE   shift, and go to state 55
    T_REPEAT  shift, and go to state 56

    Statement       go to state 114
    Assignment      go to state 61
    MethodCall      go to state 62
    IfElse          go to state 63
    While           go to state 64
    RepeatUntil     go to state 65
    Print           go to state 66
    NotEmptyStment  go to state 137


State 114

   78 NotEmptyStment: Statement .

    $default  reduce using rule 78 (NotEmptyStment)


State 115

   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET NotEmptyStment . T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_CLOSEPAREN T_SEMICOLON
   77 NotEmptyStment: NotEmptyStment . Statement

    T_ID             shift, and go to state 88
    T_CLOSE_BRACKET  shift, and go to state 138
    T_PRINT          shift, and go to state 53
    T_IF             shift, and go to state 54
    T_WHILE          shift, and go to state 55
    T_REPEAT         shift, and go to state 56

    Statement    go to state 139
    Assignment   go to state 61
    MethodCall   go to state 62
    IfElse       go to state 63
    While        go to state 64
    RepeatUntil  go to state 65
    Print        go to state 66


State 116

   29 Declaration: Type IdentifierList T_SEMICOLON .

    $default  reduce using rule 29 (Declaration)


State 117

   30 IdentifierList: IdentifierList T_COMMA . T_ID

    T_ID  shift, and go to state 140


State 118

   41 ReturnStatement: T_RETURN Exp . T_SEMICOLON
   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_SEMICOLON    shift, and go to state 141


State 119

   43 Assignment: T_ID T_ASSIGN Exp T_SEMICOLON .

    $default  reduce using rule 43 (Assignment)


State 120

   69 MethodCall: T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON .

    $default  reduce using rule 69 (MethodCall)


State 121

   68 MethodCall: T_ID T_OPENPAREN Parameters T_CLOSEPAREN . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 142


State 122

   44 Assignment: T_ID T_DOT T_ID T_ASSIGN . Exp T_SEMICOLON

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 143
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 123

   70 MethodCall: T_ID T_DOT T_ID T_OPENPAREN . Parameters T_CLOSEPAREN T_SEMICOLON
   71           | T_ID T_DOT T_ID T_OPENPAREN . T_CLOSEPAREN T_SEMICOLON

    T_ID          shift, and go to state 28
    T_CLOSEPAREN  shift, and go to state 144

    Parameters  go to state 145
    Parameter   go to state 31


State 124

   54 Exp: T_ID T_DOT T_ID .
   70 MethodCall: T_ID T_DOT T_ID . T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON
   71           | T_ID T_DOT T_ID . T_OPENPAREN T_CLOSEPAREN T_SEMICOLON

    T_OPENPAREN  shift, and go to state 123

    $default  reduce using rule 54 (Exp)


State 125

   56 Exp: T_OPENPAREN Exp T_CLOSEPAREN .

    $default  reduce using rule 56 (Exp)


State 126

   61 Exp: T_NEW T_ID T_OPENPAREN . ArgumentList T_CLOSEPAREN

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp           go to state 146
    ArgumentList  go to state 147
    Arithmetic    go to state 81
    MethodCall    go to state 82


State 127

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   64           | Exp T_PLUS Exp .
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    T_MULTIPLY  shift, and go to state 104
    T_DIVIDE    shift, and go to state 105

    $default  reduce using rule 64 (Arithmetic)


State 128

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   65           | Exp T_MINUS Exp .
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    T_MULTIPLY  shift, and go to state 104
    T_DIVIDE    shift, and go to state 105

    $default  reduce using rule 65 (Arithmetic)


State 129

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   66           | Exp T_MULTIPLY Exp .
   67           | Exp . T_DIVIDE Exp

    $default  reduce using rule 66 (Arithmetic)


State 130

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp
   67           | Exp T_DIVIDE Exp .

    $default  reduce using rule 67 (Arithmetic)


State 131

   46 Exp: Exp . T_LSS Exp
   46    | Exp T_LSS Exp .
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    T_PLUS      shift, and go to state 102
    T_MINUS     shift, and go to state 103
    T_MULTIPLY  shift, and go to state 104
    T_DIVIDE    shift, and go to state 105

    $default  reduce using rule 46 (Exp)


State 132

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   47    | Exp T_LEQ Exp .
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    T_PLUS      shift, and go to state 102
    T_MINUS     shift, and go to state 103
    T_MULTIPLY  shift, and go to state 104
    T_DIVIDE    shift, and go to state 105

    $default  reduce using rule 47 (Exp)


State 133

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   48    | Exp T_EQUIVALENCE Exp .
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    T_PLUS      shift, and go to state 102
    T_MINUS     shift, and go to state 103
    T_MULTIPLY  shift, and go to state 104
    T_DIVIDE    shift, and go to state 105

    $default  reduce using rule 48 (Exp)


State 134

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   49    | Exp T_AND Exp .
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108

    $default  reduce using rule 49 (Exp)


State 135

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   50    | Exp T_OR Exp .
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109

    $default  reduce using rule 50 (Exp)


State 136

   72 IfElse: T_IF Exp T_OPEN_BRACKET NotEmptyStment . T_CLOSE_BRACKET
   73       | T_IF Exp T_OPEN_BRACKET NotEmptyStment . T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET
   77 NotEmptyStment: NotEmptyStment . Statement

    T_ID             shift, and go to state 88
    T_CLOSE_BRACKET  shift, and go to state 148
    T_PRINT          shift, and go to state 53
    T_IF             shift, and go to state 54
    T_WHILE          shift, and go to state 55
    T_REPEAT         shift, and go to state 56

    Statement    go to state 139
    Assignment   go to state 61
    MethodCall   go to state 62
    IfElse       go to state 63
    While        go to state 64
    RepeatUntil  go to state 65
    Print        go to state 66


State 137

   74 While: T_WHILE Exp T_OPEN_BRACKET NotEmptyStment . T_CLOSE_BRACKET
   77 NotEmptyStment: NotEmptyStment . Statement

    T_ID             shift, and go to state 88
    T_CLOSE_BRACKET  shift, and go to state 149
    T_PRINT          shift, and go to state 53
    T_IF             shift, and go to state 54
    T_WHILE          shift, and go to state 55
    T_REPEAT         shift, and go to state 56

    Statement    go to state 139
    Assignment   go to state 61
    MethodCall   go to state 62
    IfElse       go to state 63
    While        go to state 64
    RepeatUntil  go to state 65
    Print        go to state 66


State 138

   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET . T_UNTIL T_OPENPAREN Exp T_CLOSEPAREN T_SEMICOLON

    T_UNTIL  shift, and go to state 150


State 139

   77 NotEmptyStment: NotEmptyStment Statement .

    $default  reduce using rule 77 (NotEmptyStment)


State 140

   30 IdentifierList: IdentifierList T_COMMA T_ID .

    $default  reduce using rule 30 (IdentifierList)


State 141

   41 ReturnStatement: T_RETURN Exp T_SEMICOLON .

    $default  reduce using rule 41 (ReturnStatement)


State 142

   68 MethodCall: T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON .

    $default  reduce using rule 68 (MethodCall)


State 143

   44 Assignment: T_ID T_DOT T_ID T_ASSIGN Exp . T_SEMICOLON
   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_SEMICOLON    shift, and go to state 151


State 144

   71 MethodCall: T_ID T_DOT T_ID T_OPENPAREN T_CLOSEPAREN . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 152


State 145

   19 Parameters: Parameters . T_COMMA Parameter
   70 MethodCall: T_ID T_DOT T_ID T_OPENPAREN Parameters . T_CLOSEPAREN T_SEMICOLON

    T_CLOSEPAREN  shift, and go to state 153
    T_COMMA       shift, and go to state 37


State 146

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   63 ArgumentList: Exp .
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110

    $default  reduce using rule 63 (ArgumentList)


State 147

   61 Exp: T_NEW T_ID T_OPENPAREN ArgumentList . T_CLOSEPAREN
   62 ArgumentList: ArgumentList . T_COMMA Exp

    T_CLOSEPAREN  shift, and go to state 154
    T_COMMA       shift, and go to state 155


State 148

   72 IfElse: T_IF Exp T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET .
   73       | T_IF Exp T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET . T_ELSE T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET

    T_ELSE  shift, and go to state 156

    $default  reduce using rule 72 (IfElse)


State 149

   74 While: T_WHILE Exp T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET .

    $default  reduce using rule 74 (While)


State 150

   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_UNTIL . T_OPENPAREN Exp T_CLOSEPAREN T_SEMICOLON

    T_OPENPAREN  shift, and go to state 157


State 151

   44 Assignment: T_ID T_DOT T_ID T_ASSIGN Exp T_SEMICOLON .

    $default  reduce using rule 44 (Assignment)


State 152

   71 MethodCall: T_ID T_DOT T_ID T_OPENPAREN T_CLOSEPAREN T_SEMICOLON .

    $default  reduce using rule 71 (MethodCall)


State 153

   70 MethodCall: T_ID T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 158


State 154

   61 Exp: T_NEW T_ID T_OPENPAREN ArgumentList T_CLOSEPAREN .

    $default  reduce using rule 61 (Exp)


State 155

   62 ArgumentList: ArgumentList T_COMMA . Exp

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 159
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 156

   73 IfElse: T_IF Exp T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_ELSE . T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET

    T_OPEN_BRACKET  shift, and go to state 160


State 157

   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_UNTIL T_OPENPAREN . Exp T_CLOSEPAREN T_SEMICOLON

    T_MINUS      shift, and go to state 72
    T_NOT        shift, and go to state 73
    T_ID         shift, and go to state 74
    T_OPENPAREN  shift, and go to state 75
    T_NUMBER     shift, and go to state 76
    T_TRUE       shift, and go to state 77
    T_FALSE      shift, and go to state 78
    T_NEW        shift, and go to state 79

    Exp         go to state 161
    Arithmetic  go to state 81
    MethodCall  go to state 82


State 158

   70 MethodCall: T_ID T_DOT T_ID T_OPENPAREN Parameters T_CLOSEPAREN T_SEMICOLON .

    $default  reduce using rule 70 (MethodCall)


State 159

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   62 ArgumentList: ArgumentList T_COMMA Exp .
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110

    $default  reduce using rule 62 (ArgumentList)


State 160

   73 IfElse: T_IF Exp T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET . NotEmptyStment T_CLOSE_BRACKET

    T_ID      shift, and go to state 88
    T_PRINT   shift, and go to state 53
    T_IF      shift, and go to state 54
    T_WHILE   shift, and go to state 55
    T_REPEAT  shift, and go to state 56

    Statement       go to state 114
    Assignment      go to state 61
    MethodCall      go to state 62
    IfElse          go to state 63
    While           go to state 64
    RepeatUntil     go to state 65
    Print           go to state 66
    NotEmptyStment  go to state 162


State 161

   46 Exp: Exp . T_LSS Exp
   47    | Exp . T_LEQ Exp
   48    | Exp . T_EQUIVALENCE Exp
   49    | Exp . T_AND Exp
   50    | Exp . T_OR Exp
   64 Arithmetic: Exp . T_PLUS Exp
   65           | Exp . T_MINUS Exp
   66           | Exp . T_MULTIPLY Exp
   67           | Exp . T_DIVIDE Exp
   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp . T_CLOSEPAREN T_SEMICOLON

    T_PLUS         shift, and go to state 102
    T_MINUS        shift, and go to state 103
    T_MULTIPLY     shift, and go to state 104
    T_DIVIDE       shift, and go to state 105
    T_LSS          shift, and go to state 106
    T_LEQ          shift, and go to state 107
    T_EQUIVALENCE  shift, and go to state 108
    T_AND          shift, and go to state 109
    T_OR           shift, and go to state 110
    T_CLOSEPAREN   shift, and go to state 163


State 162

   73 IfElse: T_IF Exp T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET NotEmptyStment . T_CLOSE_BRACKET
   77 NotEmptyStment: NotEmptyStment . Statement

    T_ID             shift, and go to state 88
    T_CLOSE_BRACKET  shift, and go to state 164
    T_PRINT          shift, and go to state 53
    T_IF             shift, and go to state 54
    T_WHILE          shift, and go to state 55
    T_REPEAT         shift, and go to state 56

    Statement    go to state 139
    Assignment   go to state 61
    MethodCall   go to state 62
    IfElse       go to state 63
    While        go to state 64
    RepeatUntil  go to state 65
    Print        go to state 66


State 163

   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_CLOSEPAREN . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 165


State 164

   73 IfElse: T_IF Exp T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_ELSE T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET .

    $default  reduce using rule 73 (IfElse)


State 165

   75 RepeatUntil: T_REPEAT T_OPEN_BRACKET NotEmptyStment T_CLOSE_BRACKET T_UNTIL T_OPENPAREN Exp T_CLOSEPAREN T_SEMICOLON .

    $default  reduce using rule 75 (RepeatUntil)
